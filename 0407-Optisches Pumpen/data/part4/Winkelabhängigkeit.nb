(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     60515,       1226]
NotebookOptionsPosition[     59619,       1191]
NotebookOutlinePosition[     59956,       1206]
CellTagsIndexPosition[     59913,       1203]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"path", " ", "=", " ", "\"\<04-+10.tab\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ch1zoom", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ch2zoom", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Import", "[", "path", "]"}], ",", " ", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ch1", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "*", "ch1zoom"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ch2", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3"}], "]"}], "]"}], "*", "ch2zoom"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ch1", ",", " ", "ch2"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "750"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"PointSize", "[", "0.0001", "]"}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Kanal 1\>\"", "<>", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ch1zoom", " ", "\[NotEqual]", " ", "1"}], ",", " ", 
         RowBox[{"\"\< x \>\"", "<>", 
          RowBox[{"ToString", "[", "ch1zoom", "]"}]}], ",", " ", "\"\<\>\""}],
         "]"}]}], ",", " ", 
      RowBox[{"\"\<Kanal 2\>\"", "<>", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ch2zoom", " ", "\[NotEqual]", " ", "1"}], ",", " ", 
         RowBox[{"\"\< x \>\"", "<>", 
          RowBox[{"ToString", "[", "ch2zoom", "]"}]}], ",", " ", "\"\<\>\""}],
         "]"}]}]}], "}"}]}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t/s\>\"", ",", " ", "\"\<U / V\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.637565191222225*^9, 3.637565250415153*^9}, {
  3.637565281892177*^9, 3.637565424061915*^9}, {3.637565463206695*^9, 
  3.637565477378036*^9}, {3.637565934911824*^9, 3.637566000562091*^9}, {
  3.637566036145206*^9, 3.637566163068161*^9}, {3.637566193527112*^9, 
  3.637566209453878*^9}, {3.637566329351447*^9, 3.637566340752412*^9}, {
  3.638183354523981*^9, 3.638183382705235*^9}, {3.638183580874353*^9, 
  3.638183583039239*^9}, {3.638183615693468*^9, 3.638183679629452*^9}, {
  3.638183824835229*^9, 3.638183825321174*^9}, {3.640453521911176*^9, 
  3.640453536709288*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         PointSize[0.0001]], 
        PointBox[CompressedData["
1:eJxdnXVcVN0ahVEMULFRwUQFA8VAwWRUUFERsLvFbsXuFjuxwRYTFPxsxMAu
7O7CQrHzMiw9z+96//H33PXuPWdg5py9373Wh0PHvg0DUlpYWPxKa2Fh/vfv
/36EvYur3zHUNPN1VOjn2FCP/+dwgxs/ztx/YPE9/+iHPMY/PL5436JQ07tu
j6ZGfTn6T/1Jg/9r59GiTOuz/4y/4DG4f26b+yVDTabNZxZcvRdn6JrvssGr
nb6NXJDl2j/z3zDGp15dJKCh5y2D9Xp3PO72D5r1+H2IqXveJvUzB94zWK9/
3+AuPjH2XS898IizuJvSOijkz/U8NDhXuusZa7165HFsdpkhJR1C/lzfY4/d
+Sa9bLB7penk8TcpHVM/NVjX+8zgEZNSf7bM99xgXf8Ljy1br7cb7LfSVNIz
z8uHbvEeIVVKXF76dMWf9/PSY9gLpzJWW5ab7lq43ovxe+XRLu05uwY3l/15
f689ajkGplxqtcw052CdS6Hd3nhY517ZttjpOX/e71uP43t3z0yTMDnawSP8
UXS1hD+8KFrvP8Fj6qSWl/Y/WhD9bfm+NqXqv/tzPbOi9fN453F/eZZ1B2Km
RMd9j722ssV7D2//H7kGXhsfrZ/P+z+/j7HRm1vGNcjYJfHP9Y2I1s8r0UPv
a3j0xD13To8a8OHP6w+O1s/vg0eHsk1KFw8bGN0m14uar0d/NFg/z09/5u8X
7TbkQ3Tr6Z885p0e4x09qne0fr6fDc509XfFM8Gwft5fjPHPyqWPrLwW1s//
q0epPmtS7E89IPrQ/Bwum8O/Gq+v6/5m8JL3DhvtD8D6/Xw3xg9oULJg0ElY
v68fRn298ArLv175Yej6/f00rqdwJq8c3R/C+n3+MvhHb78519/8Mt6ffr+/
Db5ypmU67++wft8Wpr+vd83W9fCtCbB+/7DnsQpjsqVLYbA+DylMf68/fJBH
lXpzYH0+4DyFvb6Oz5HSYH1e4GmX6uzauzylacGnNO0W+wT++fygfxzvN/B9
QUuD9XmyNK5H/z+sz5el6e/P59yDlq87lEpl6Pq8pTL0SnPbb1oSha7PH/qG
al26Xqyc2tD1eYSzJfQsbH0Y1uczjXG9Y0P6P6jmDevzCr/yHbJy6DlYn9+0
Bjf/NbJVeOO0xvz6PMPHto7P9fwmrM+3lcFl2ky9kr+Dlen/P+9Wpr+fh5UZ
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
VnUxLD8d9Re3XvsQGgrLX0f9CauN/VKFoctvB0d3GvqqawT18t+h7zro3e30
Hlh+PHiLnd1jl8OMlz8Pfc0gc0cCll8PXnp+z62PcYyXfw+eWzyoWYtbsPx8
sP47bbD8ffDo+8X9CryC5feDAyt/PzXhA9cj/x/ca9HpWs9+UC8/YE32d++W
Ha6buib7u2R/IHoLn14e22zQ5RdEN+9msuSA5R+Ea6e0cQvMB8tPCHu0uRNx
3Yn55S+Ey+/eWrJKKVh+Q9g52+iwEHfmk/8QvWAfX0fLarD8iNTbncy3qos3
LH8inLnw2zyn/BkvvyKcZkz04pItqJd/ET3py5F9bgdYfkbqP5RrP+dDd3T5
G9Ffzi6d9JFBl98RfhhvMXXfcFj+R/h6zYuW+Scwn/yQ6OdDV40ZPx1d/kg4
9nv/70/mUy+/JHygqXkFA8s/Ce+MyJq4ZS3zyU8Jm7t/mbdSL38l+qquO+MH
RsHyW8KLD0/ocu0A4+W/RJ+dt/HDSrHo8mOiTxpauO3Kc7D8mdSPvPThRopr
sPya1A90OdYk4B66/JvoPaYtvHjiGbr8nHD7xwH1SyRQL38n3MzkdnL2F1h+
T9h3aZqaiRa12N8l+z/hmh+vHmpqDcsPCldJ/gLXMuaTPxROtp/YUy+/KHqx
NN7lxhWE5R+lvkCHXOGPi6PLTwrn3P/c2dsVlr8Utsm5Z8PmyrD8psyfasC0
Qpm80OU/Rf9+pkXIAB9YflTq3xcpnvQIRpc/FX4+3rwBgeVXZXzS5i3rigBY
/lXqr1Ywv2N0+Vnhs/N7pus8mHr5W+GjbypPPj6aevld0ffWyZDSeQos/ysc
sfb2qFmzYflh4Y2/t3x9FwzLHwuHtBwV2CQUll+W61kYZW6goss/C8/InK93
nghYflrGT+j55vmYPbD8tdQPjz3Y+VEMLL8t3N9h9v1apxgv/y3cdWS71pvi
qJcfF257rdR1m1uw/LmMb1LWonH/R7D8utT7zLxw/vJLWP5duMbz0HoVPjBe
fl64omf/48t+UC9/b232dyure/5OBcvvCxf5miW6o01tY7z8v3A+8+3PFpYf
GM6+fceuYvlg+YOZP326CWVnOqHLLwynDGi0LcGFevmH0b9GF0ra0sDyE1P/
1v7Duv9M6PIXw8n/dS9v6uU3Rr9zYcGK0f7o8h+jX3YOsHvYHJYfGT49ufzC
mh0YL38yHPMgdZaw7tTLr4y+u8rVGRkGoMu/DG8PXm/Vbzj18jPD698Pnnhp
PCx/M7y8fm0L9+nMJ78zPH9jzpFL58PyP8NBls8//1zGfPJDw+Pa7h7YYS31
8kfDQ/dMfXt0C/XyS8N9srfoWTSKevmn0QP6Fns2/QAsPzX1rU997fj2GLr8
1XAjx1N3G56D5beG64xd2nLXVVj+a7jarR5X7e7xevJjw+5ulRuOegbLn814
l7npz91/iy6/Nrrjq1t1vL7A8m/DuWtvObbBwttg+bm9jfmyrh5ZPb01LH83
bJ38n99kvPze6BbNzf95Plj+b+o/7XgdWb4guvzg8Gubg6WXFIflD2f8427m
Djm6/OLot460Ldq+Mrr84+gX85Vae8QTlp8cPjHsd/4iPrD85XD05fPLghoz
v/zm8K5SoTnftKZe/nP0rUH95jcIQJcfHX3Nk2qZonqjy58Om93nuQbD8qvD
c5c9SDNyNCz/Ojz1U8T4e5Nh+dnh0Q3G/6oxm+uRvx09cEvD4euDYfndqe+V
ttAn61BY/ne4U8fE/r03wvLDwy0PHHl9IZz55Y9H98+1oHu5PbD88nDtgZ2f
BMfA8s/DHskGGlh+erh8sdR32sbx+vLXoztPvNL88E1Yfnu44L11lx0fMV7+
e3S7SoP9p71Elx8fPfPCWmdeJcLy51OfNiGHt/8PWH79Ouzv6pp31HUMXf59
2Px0y2kDy8/P+Jfm7ZstLH8/9Q9bNXe/mxeW3x++vqvozupOjJf/H/18lq8u
61xg5QGoj+11cpOVO7ryAfCB40ucepmoV14AjizYY/X52rDyA4zfNKpSPld/
WHkCeNX1dEsXNYeVL4AXu5oN0syvvAE8e9bmuW26w8ofMH7SixE2Mf1h5RHg
kV4+0woPh5VPgAeG5Ek9dTysvALc49ursS+DYOUXuJ4OTQ788J0PK89AfbPw
mUN3LENXvgE27wZt18LKOzC+ZvIHBl35B/QqMb9e3o5EVx4CvWye812rHUBX
PgIuNiTk0ZpjsPIScIG4vu3SnmM+5SfgnCXNT2BYeQrGZ5yaudm5u7DyFdSn
enQ/rswzWHkL+HvVCN+Fbxmv/AX8frF5wQsrj8H4F4kNarW2qGuw8hl1jfp7
vgUPR1vBymvAyXaQLLDyG/BZ88fFDlaeAz7abn75eAdeX/kO9L17O0XULw4r
7wFH2JYrGVEWls8FNndPs1eGlQeBQ06bG3a8vvIh6Iuc1oXeqoeuvAg8Y1xg
HlNj6pUfgSfcrrl4dWtYeRLGD3fPkT1NALryJXD/eU9nd+8NK28Cd329K/3Z
QFj5E7it95QppUfzesqjoDdZ08xywWR05VNgn+QDR+qVV4E9W3z51jKYeuVX
0CtGnhh8MARdeRa4dCZzYgVWvgUu0qN7n0nhzKe8C5zvWMX457th5V8Yn71A
ui4+MejKw8DpR5gdWNQrH4Oe8uqmNtniYOVl4K+lzYYpWPkZOGF6vSY3HzK/
8jToT5/mvlj1Jax8DXyn+iufVYmMV94G/fLy/SdS/YCVv6nH/u7zDK9uqWDl
ceCYhm0Onc5Qz5hf+Rz05PazLay8DvXbrX79Ny8vrPwO9es7nXP95AgrzwOv
OLhyewsXxivfgz7frq/zATd05X3goEGmDQVM1Cv/A487n6nQxNrUKw+EPrT4
/ZXP/GDlg+CkD599veaw8kJwwP2xi7a1Z37lh+DWlRtkzdodVp6I8Y0WOcwK
7I+ufBF63XfvrG8MQ1feCK7mc3hSlfHUK3+E7r5hXorQIHTlkdBdUnZK+kij
K5+E7tjGfGKLrrwSnHu3ZeCpNdQrv4SeNdvlhJJb0JVnQrfus7bX3EhY+Sbq
LU4Oev5hP6y8E/ypUM3OzY/Byj/Br0fb3t93FlYeCja7y/Nf5fWVj4Jvldt1
bfxd6pWXQo+bPbnR06foyk/BJ+Kbnq/zlnrlqeDomkXqbf1MvfJV6LvMf83C
wof9XXLeCt76/XiNQVaw8ldwsp01M6w8Fpy83LWDlc/yMV5/boaKu1Y6oCuv
BU/tal02ZXFY+S14zOEbWwPKMp/yXOiBeTcVO1kJVr4L7jV0+LoSnoxX3gvu
dKmuw5x61Cv/hd7SJfeKxEaw8mBw0uYoV7PWjFc+DL32430L9naGlRej3sNk
7vDCyo/B5Ze2TloiMF55MrjExxJWT0ZRr3wZXND/5wTvydQrbwbbbT77e/Ms
WPkzxmdOs3JEpmB05dHgtB36fB4QQr3yafDPfR4Dr26AlVeDP+TI9LZiOKz8
GvO/7H+vx4rd6MqzwQ/PbH9qEUO98m3wjSJjO3Y+CSvvxvjz4/3vHr8IK/8G
x94p0NL5JuOVh4MPVHh3ZdZD6pWPQ4+cH9PgfTy68nLom97MPdskEVZ+Dl5V
p2OdPd9h5engxUnvNk+q+sb8ytfVZ3/3O2X1sRnQlbdDn2w+Ps+Orvwd+sio
NRVq50VXHg99YOZBkZscYeXzqO/R06t0RhdYeT24Q2z2Lf3dGK/8HnozB/OO
EF15Ptg3+QJh5fsYX/PapPzL/WDl/aivUrZp0pYLXfk/2HWmU85O7alXHhAu
9vzTvNhusPKBjC/geTxj8f6w8oLU51wZHDRzGKx/qc/4tWuad+Ng5QmpT9W4
wvjGQejKF6J/32ZeYKErb4j+Pml1kHsZrPwh/KJz2MfRa2DlEZnvXvSw/g83
oyufCF+1r/u6ZiT1yivCZwPtu4fth5VfZPzRC/GPMxxDV54RfZ/zvvb9zsLK
N8IRk6ffvnQFVt4R3vjA3CCClX+E9XcHYeUh4UXBP/x+vYGVj4RnvD9zusNn
WHlJeEL9FbWP/a5v5CuUn/Q19OEbex8pagUrTwn3N8dxMsPKV8LdzO26XLDy
lnDbPXfdGjnAyl/CTZIPuGDlMWGfvmZHMKx8Jux5ym/TqEqw8pq+xvut6FjA
6UENdOU30UuPTVjlVQ9deU508x9f2dgIXflO9Hxuc5ekbw0r7wnbzu1g27cz
rPynr0nnkF2i078qMzeuF6w8KJwy2aADKx8Kf10VN3XJKFh5UV4v4cfqVD8n
oSs/Cj9tNnBs+1m+f/4eXqc/eVL4zg7PH0cW+f75frT/ky9Fv2yTfWiREHTl
TeHT3R4nBm34ez0t/+RP/45vFH34SGTfN9th5VH/1teN1t/thJVP/cuVorcP
MxuMfU1//66q8qqGblp/2fFRrpOw8qvG65lWlPrUduRF4/pMyrMa7880Pyj2
5r0bxs/LpHzr3/fXzxT0ZFFTz4d/6wealHf1NemcYKhpXLWucevjfU3KpY4x
Kf/qa5LPb6Jp6DJ333SJvqa/fz9UeVhfk9aVy019P6U91fu7r6llZ7PTf4NJ
+Vhf0x7zX9XyDjcFNDA7iPxMrxqYf1IRJuVl/UzNkxsb202tkwNSfqb16cw7
600m5Wf9TOWyuFU50HC9qZHZ/pfd78/1rDUpT+tnkm96jamueXmQx8+knMHq
P+/Dz7Sx/NnKvhdXmaodsCvfztHPtPxogfAB3VaZlLf1+/N+Qk3uueLDD5eE
lb/1+/PzCzW5DNxbwskNVh7Xz/T379s6ngvaOM0DXflcOE+xVoVf16JeeV04
60TnUH8/Xl/5XT/T7EaDCgf/DjUlbWZyRzZDV54Xtqh0Jjhne+qV70X/vGB5
thHdeD3lfeHXb3vNvtsPVv4Xfly3avoaw3g/ygOj31pnM2XdOFj5YFh/JxdW
XpjrO9Fq2+he82Dlh+HoXaO/nV/K+1OeGN6VxW+w6xpY+WJ4a6/87xdthpU3
htcef9v7205eT/ljrndpwUMv2uxHVx4ZnjtqTkDMUeqVT4anXm//oPBZWHll
xo9xNZ84wsovw4GzUtx4eQdWnhnu9eJiY7+nsPLNvL9OXqsv7HgDK+8MtwwZ
4JPjM+OVf4YbfKtxYthvrl95aH+D126yXv3GElY+Gs5//V27Alaw8tJw0mIk
b8MM/sbnS/lp9BzJf64SVp7an59/8p8zhJWvhm2S/9wdrLw1rD+HxvzKX6Nb
vuiYtENGVx4bHpMcMIKVz+b9fPN09dtWDFZeG9bfpYaV34bfrbQ8naUsrDw3
3OvMy6mebrDy3VzP86+XagVWgpX3hjsV2Z9qgwes/Dfz3W1sTlyhKw+O3nL8
jLHpasPKh1N/Zbs5UImuvLi/6e/f425wp3XSIwdWfpz6M+lq7g1pBCtPTn3t
CiWHXmyGrnw5fCTA1s2yNay8Oewx/2diufaw/uX69x56EtGlM6w8OvXl35zt
u7gbuvLp6OG5d5U81QtWXp3rL5EcIEdXfh19w+DJYSUDYeXZqS+0tk/XdsPQ
lW9HX3mxqePcUbDy7rDdb49Hh8dx/cq/oy8sUWTVh0mw8vDUZ26ZqZ1TELry
8bD5jw82n0W98vLoaaPu3Zw2D1Z+HtY4WHl6+Fcm84k/rHw9bF495A/h9ZW3
R//QY2yc/xpY+Xvq+y3uNmf8Blh5fPjlMX/fyM2w8vlw18QKGZ5uZ37l9dEf
FnA4lTMSVn6f+ja+1lPr7IaV54dvjHhXc8R+WPl+uHHYDcuth+D/ARSyJvg=

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         PointSize[0.0001]], 
        PointBox[CompressedData["
1:eJxdnXc8Vu//x9tRKYRQ2SOEjCjKURSVor132nvvPbWnNu00NT/tk4b2opJU
ykpIpK3xc+7X+V6vx0//9Hg+rnGf+z7Xucb7/XodlgPGdAgvV6ZMmb+Vy5RR
/v/fv203LGLHD30ir/x4Jvp7fLTf/+dYwZ0ydMdNcDxfqvyq4MKh6UvP/LhR
qv4dwf/19evu1utBqfaPBUuH7294nppQqr+ngnfb/Zq5QS+pVP/Jgivutg/v
EJBS6vNeCx5Wt3Nb3UmppT7/reDBIXGmQxLflbqeNMHGVV5Ub5mXXur6MgTf
uZVfzrZiVqnrfS94xqKK38ubZZe6/g+CnQPq5KZ55ZT6PrmC35TxSI0LzSv1
/T4KXnOlVWL00PxS3/eTYEu/2HTZv6DU9yf/2n6xt2vbwlK/BzmhOD5pZ/fP
pX4f8uEeCe2rDy4q9XuRF55/fW/W+C+lfj9yb+MPLT7O/lrq9/wm2GvKF7nX
8m+lft/vgms8/9f4fuT3Ur/3D8HvPaue9t37o9Tv/1Pw1fVGLodjf5a6H78E
b/lsedD08q9S96dY8Pj2zlYRd4pL3a/fgtvENtr+89nvUvfvj2CbGoFGw9L+
lLqffwX/HhW65kX+31L395/gZ/d7VAku/lfqfpeR/sdJhh7XUhaQcf/JATcb
zalZpaxgjAdy7ES/Jm3WkDE+yHVsAn/ONyonGOOFvCyx1dkL28kYP+Sv80Mn
fLYqLxjjidzfvXMDxxgyxhf54bseH/u7VhCM8Ub2Wdvv0JYzZIw/8gH/wUOe
+FYUjPFIrlkwwkb7Ghnjs5LguVHj3vkHkzFeyXntpuyc+pCM8VtZcLe/M3vG
dqosBS4f+b445n/jubK0wbhCl+rOCfLNo/ONs19WltL3KS0S1PGtJXlo/iXK
br2XPjPvryXNMDgW9G76U3W8a0kXW1Ur57Tkubyz2qp1Xd9rST9nD780cf0L
dfxrS+s+zpQa9nkpV7m0PnT1KG1p3saAkitIUZ8HbUnz8Sdfy5NHbKl2q0hb
6tb49O3JV1LV56OKFOK9rFm/zLdyumnUnb/TqkiRo/UXXL37Tn1eqqjXmyaH
3t272KtMVcn1tU2leRvT1eenqnq9GfKlaYcCRi+uKsW30XSoPk9VpSGDlX9Z
cj2H2DL7q1WTTu74dCC+zXv1+aomHSpMaDtAN1ve+OLM5dfrqkm7W5wt+vM0
W33eqkn5yte78EEuu/TidEMTHSnzsVXKz9k56vOnI2kuJyBXHuUd5902Skdy
1nxArvo86ki2SvHyPPllVvyXhbbVpbo9Bvmmhn5Un8/qkubyDfLllpvun7h0
uLp0zmxRbvtz+erzWl3SPlKnpMUn+VSLhNFf3Gqov98n9fmtIXXS/EAFsvnX
JKf652pI+zUDokB9nmtIPzoqFQrklkpzc12ptXI7jQrV51tXCi759GNBhfLv
GM0PIbVUvv7UQvV515U0t/dCoXxy3sQTw/bpSnntlSssVJ9/XemDnZvWkTqf
5aHdv69elK0rZRcrHX1W5wM9qeTLrowc/Vk2d5s+epeTnuSjXH7UZ3V+0JNW
am74Z/mZ1p+Qy6P1JM3lvPuszhd6yoeXjMAiefnbOU7JJ/Qk5eY+tipS5w89
dfwWyc3Olavy9YuetMQo+eH3jkXqfKIvKVfXY1CRrLm6RvpSimYAF6nzi76k
/Npmi4rkY0O0btWfoa+OryJ1vtGXlN7S9xXJg6Tl+4KvkDH/6Eslg3VXyZCR
TWtVXziobE31/hep8xH5cf6aAXMDyZifaor2i+NrNtu+hIz5itx05ybzc3fZ
HvMXuWiSyd9EHQNRH/OZgbjemLbbX30KMxDfD/Mbua+t+cWqG8iY7wzE72P4
Z9cW+yQD8Xti/jMQv/f9pzZTA0wN1eehSJ0PyfOPHOjSt7ehuF+YHw3F/Wy0
0LHhjGhDcb8xXxqK8ZDf82jNyHRDMV4wfxqp88Nnea9Hg88n7YzE+MJ8aiSt
ufa1Xq/Vn+WeVU89fjjMSIxHzK9GYrzqpTc8nnPESPKrkrRnbNPP6nxrJMb3
rQvnVlYqMJI2KdNbcaE6/9YSz8Osdb4jrTxqSc2Vr5NSqM7HtcTz4zH8Smu/
ybXU+blQnZ9rSQUHlBmrUM5p1syhx/la6nxeqM7XtcTzGW1yo/Lk37WkLyVP
5we7QnX+NhbPc5fClllrJWMp2lS5g4XqfG6szq8FcrU7d26UdCnmA8zvxlK7
AbolU0qBfD06ZM+dm8bS3rFNS36BAnW+N5bCND94gTxt6qN5mVomEuaJAnX+
N5EOaibcAtk1rEO/siEm0l/l8twK1PXARJ1fC+RM+2d+dVeTsT6YSDhFFMjb
/nWt2zjBRNJMd6mf1PXCRNIsHzs+yR2SXhZ3MjSVeq1Wbugndf0wlTS32/ST
rHW898ux3Uwlzc//M19dT0wlzc+TnC9fWfz23IptZKwvpmK+ndhnYOTBN6ZS
uGaA5KvrTW1p6FrlDubLjl5Zk25Y1hbzNdaf2lKc5nH7KL/TGdbp7SAy1qPa
0ijlbid8lCMzc91/H6itrocf1fWptqS53Ws/ym1LJj/j3NpifcB6VUe6o3w9
149y+Y2FnzxcyFi/6kiT1is9fpTPj5z4MHRcHQnd5anrWR1pmmYA58ljA78f
GXG6jvREWb6G56nrWx1ptuaJy5Pt6kxfvuQ7GetdXcGvin4P2+NTV3qm3F6t
PHX9q6uu97nyuntzguVZdaWXmvnmf+thXWmhZv7IlYP3lLNPuVpXnT/+tz7W
Fevnv+maAa3OB7nqemkmeWnmg1z5TAetDP0gM0mz/EXlqOunmViPRzguv+YS
YaY+vznqemqm7k9yZMty1Xe1fkDG+mom5Wie7xw5KXnNnMG65pLm41M+qOut
ubR1i/Lvg7zqRM0+8zuaq+vjB3X9ZXngsk1NSqZo6bMyvLt9UNdjc0mz3fD+
IP/qZ1L7QrK59K2eMoKz1fXZXH3+suVudR7+Hl7dQjDWawt1v5UteyytkffD
1UJd37PV9dtC6qAZwNly9S9hKYvbW4j9DJ5TCwmPz3v5Q991dw0mWEia4Xvs
vbq+k2/eSzy/e4OFpBl+K9+r672FVAk3WI72NoxpcJaM9d9C7Kdm7Omy+UqS
haT5+au8V/cDFhJ+riy5S43NS0J+Wkiar3c7S90fWAp2m5E8+aWppaS53ANZ
6n7BUt1/ZsnV3psOHtrEUuznsH+wlPQ1C16W/L5Dr87fepOxnyBfu7IjcOEc
S0l5el7bZKn7C0tJ+XWNK2TJOxxTPfR3kbHfIE/dZGEdfY3tsf9geadyA/Rd
MiylWpoFN1Pdj1hK15Xl51qm7Dp6T9lLFa0kzfZ2V6a6P7ES5VVeZhS0sidj
v2Il+stsYfc2KZiM/QvrXz0x5FH4cDL2M6y/rW7MlaLlVuJ6sb9h+eRlOUfn
HWU59jvk9l+ddtR4RMb+x0r8vvX7j1qxo8BK3B/sh6wFaz04NsNJn4z9ETm9
UcHw8x7W4v5jv2QtxseVvW49gjpbi/GE/RN5i+6EVs8mW4vxh/2UtdRXmT6c
3ssTZ55uNHCztRi/2F+RQ7O/2heeJ2O/ZS2eB8dO3rXmpFhLmuXj4Xt1/2Ut
nreKV6dW0vlDxn7MRl0Ps+W3The+bjWzEc8v9mc24vm+GFmcUc/fRswP2K/Z
qOv7BzmyfNOnZ/vbiPkF+zcbMR+NHzP7euACGzEfYT9nI+aztinyyYS9NpLm
2xV/UPd3NmI+rBdUdne/eBsxn2K/Ry5/qvna/Pc2Yv7F/s9G3Y/lyG/MFs6d
qW0rpWn2aznqftBWzO/nI26OqeJkK9YH7A9txXlpw7dKfTeHkLFfJI8ZENzO
brStWH+wf7QV61nrh8uanl5tK9Y77CfJdj736jc/Qcb+0la6r/lXst6VLLaP
E2zFeor9pq1Yj1/ptava5wsZ+087sR7/N2v1r1xDO1GO/aidWN/XfXj8YZq3
ndgPYH9qJ/YLozrrJ1fuTsZ+lRwc1/H2xulk7F/txH7E2nnjf9bb7cR+BftZ
O0nzuHbJl/9ufr7/xGWWY39LflnBeJOUSsZ+l+3PjO2+6EEZe0lPcwDNV/e/
5DWvtk7saUXGfpg8IvjVwA8B9mJ/hf0xueXpuh2nhNuL/Rj2y2RLi77NKy4h
Y/9M/r082m39QfaH/TQ56fs7C8u7ZOyvyScHWusezyVjv83rX/lo0L8mOvUE
Y/9NHua7P/+uSz3xe2E/Tg488P51t7B64vfF/pxsXtPhQda4euJ+Yr9eT9zv
X5p5op4YP9i/k5/lHD5c7kw9sb/Efr6eGH+xXT5uXfO8nqTZ3o/9qO7v64nx
qtk9/SBjv+8gxvdgl7HTjpg4iOcD+38Hsd9stvXEUB9fB/E84TzgIJ63OpWK
ut7uRcb5wEHER36M8wzqMpuM84KDeL4TX0/yyohyEPtRnB8cJM10WS9PPtbq
P9vxcWScJ8jLSg6rZdIdxH4V5wsHMb8MsvSpsKqCo5ifcN5wFPtXaeWMotp2
ZJw/HMV+1vTnpbSYIEcx3+E84ij2s18H/X3iPcxR7GdxPiE/fizF3Ywg47zi
KObTI03mxXY84ijmW5xfHMX8vOTgtah3D8g4zziK+X2AQYXVYz6Rcb5xEvvl
pnNbzP6j6yTWB5x3nMT6YZy3eNRydycRD8P5h6zcXZNOZJyHyA+va4ccmOQk
1iecj5zE+hXj2sa3YaST2C/jvEReuG2F4/VzZJyfyH0rPzRp/9JJrJc4TzmJ
9dR3Qg3t1GInEd/D+aq+YKPUsB8j65Jx3iIXtl73/pdffbE/x/mrvli/759N
fL60X32xH8d5jHzAyjDeaH59sf7jfEaev6rLmb17WB/ntfpi/9D7V+Re95v1
xX4e5zdyo8HJ669mkXGeqy/2KzUTTBe003IW+32c75zF/ia/aa/xrxzIOO85
i/3Q3Zgd/Ye3cRb7fZz/nMX+ap+h8gM6i/0XzoPOYn82d56F/+JVZJwPyT2V
aFWss9jv4bzoLPaDXt33mO1+4izOAzg/Oov9o97NDJ0GRSzHedJFcF4Duz+X
Dcg4X5JvbR+S18bLRfSH86aL2N/u1opJSe5KxvnTRZwHZk/MuTtkmovYH+M8
Su6u2QC6iP02zqdkz5BRMQsukXFeJdc4d2yz3hsXsb/H+dVFnCdyrAuWRP1z
kTThn3mZ6nnWVfDN1W5TnC1dRX2cb1keXTx+8MXmZJx3yTOGnO7cahAZ519y
l8SvgUmLyDgPk90kb8/wA2Scj8k6h6daF912FfF7nJdZnm10QX9eDq8f52dy
/7g/cytXaiDa4zxNDtWE8xqI/nC+biDaN3GWxm60J+O8zfqO6alDejViOc7f
ZOMtc/tat2og7hfO4w3E/a8Yatk1pzvLcT5n/0UVrrU7MZyM83oDcb/fXhjQ
cuoMtsf5nf0/HFveT1pBxnme9S/a7W1YaQcZ53vWj3kV6PzgaAMxnnHebyCe
h03rMm02XCHj/E9eGLy4Ts9HZMQDGojna/xfOwOrtw3E84z4QAPxvPc9favq
hwIy4gXktsOHlo8t6ybmC8QPyD4W2sWT9d3E/IN4Arne85jPTa3dxHyF+ALZ
cEXrnAqebmJ+Q7zBTcx/5ZvnvrsXSEb8wU3MlwXflyev60xGPIL85mj9J90H
u4n5F/EJ8v2BD25bTHET8zXiFW5iPj9vMvrq+yVkxC/cxHnzwKPqJTMEyxHP
YPmGRcePT4pxE+sJ4hvk+b5hB5pcICPe4SbWozGFBTvL33MT6xXiH+TeB9Zu
uptCRjzETayPrXu7r1qbR0Z8hNyoZuKibn/cxPqKeIm7YNs7E2aZV3cX6zHi
JyyvOcdgUpaZu+gP8RSWl214ZuRRV7ZHfMVd7A/yczoPmuhPRryF9V9Ff+vp
256M+Avr3+kS2bHcADLiMeT/qjVqc2c8GfEZ9rf32ovmaxawHPEa8rqp03y6
biAjfkOe42LqbraP/SGeQx6VccEh8wx/D8R3yD239rQ8Ek9GvIccHPbbeEIS
f1/Ef8helXbo+mSTEQ8iW19qqlX2p7sYH4gPeQjWG//m3y1tDzHeEC8i/7Wf
832VKRnxIw8xXvNem3/q7ERGPMlDjH9ld1SniYd4PhBf8hDP261W/d+kh3iI
5xHxJpaf+Vf2+aHeLEf8yUM837vP7H4wbrSHmB8QjyKvGaHMWB5ifkF8ijzL
MuPSv9VkxKs8xPw0Imnh6fhoDzGfIX7lIea/bittj6w84SHmS8SzyC0D4vd0
uuYh5l/EtzzE/Ozxc/C22olkxLvIlscrr09LJyP+5SHm++rhByNivniI/RHi
YR5iPflt2mr+2IqeghEf8xTrUY4SHjEiI15GTlocMe6vnadYDxE/8xTr780m
TsNuerMc8TSWn/x8r9+KYE+xviK+5in2B9EHR3br2N1TmqA5kGeq8TaWr+yj
E2Y6nOWIv5GhQ/CUzDUJ00w1HkceereddHC5p3RPOc7/yVDjc56S5nj9OkPu
MveT15jtZMTryIFea1y8jpIRv/OUNMfjSxmym2aD6yn0EIjnkc13P6l746Gn
9Eg53m7LUON75GrdxhsuT2V9xPvIv3Rq6nQo8JTsNQfeDDX+x/L3109VMCnb
UDDigQ1F/WfTOv1O1SMjPthQeqqEMxtnyNdcvxbtt2ooaaYL4ww1XkiOzdyY
O8qD9RE/ZPmObV7pnoFkxBMbSprH93u6vLy9cqBvKGken6R0Nb5InlZ5asK1
cDLijQ3VfHq6PPiy8d1lkxsK/QnijyzvNOF8XNgSMuKRZE12dzPbIz5Jdk39
FfvmIBnxyoaqXiFdrrNx28F951mO+CW5Spsm0SPvsj7imeTvZV5HeqSQEd8k
Z55VApgN1Xx+uhrvJCeONFsS95uM+KeX4KtW8uylOl6iP8RDWX7sRd/JoWZk
xEfJ21aVGW3kSka8lP0tC9wV/loiI37K+pN/Neu9N4yMeCrrD4pN6zSiPxnx
VXL7wQtC3MeTEW9lf5Jmw+Gl6hfS1fgry50TbvheXU9GPJb9mS4N91iyl+WI
z7Jcy6+SU7szLEe8lqw8HYbxZMRvyekxQaavnrM/xHO9xPh43Ddbb897MuK7
rH/FcJn28B9kxHu9BR++51DWTZuM+K+36G/LvLs/vpuQEQ9m/cXeIwquOJIR
HyZP/Fg1e5EvGfFi9jdgz5HUkBBv8TwhfkwO7d42qWZvb/H8Ip5Mbloj/+HL
UWTEl8mON1fF75pNRryZbDzD9crQ1d5iPkH8mVzR7fEZ12gy4tHeYj4qyhp7
9FssGfFp8tvtevsux3mL+Q3xapY/7HBy+8IEMuLX5EtaHTe0SWd7xLPJym5S
/wsZ8W1vMR9HTtywILlCI1GOeHcjUQ55Dhnxb9Yf//bZ+CF2LEc8nNx30+Th
Lt5kxMcbifWibUitAV+DWI54Odmn3Lnul7qxPuLn5HrnurVfMIyMeDrZaPTP
4NbTyYivk8vbbPXXW95IrIeIt5MLk30avdhGRvyd7d+sTnGNOkJGPJ7Xf7/F
TPvBl1mO+Dz5fHEdc+eHZMTryQdOXDb68oaM+D15w5A+1S9+IiOeT55f91/F
+WUai+tBfL+xKB+TGPUnWI/liPc3Fve39zL/rzWsyIj/k9tI7/Keu5ORDyA3
+jovY0cAGfmBxmL82h22ejWoExn5AnLN/tcTncLJyB+wv7K1Bt37PImMfALr
59+vcP38YjLyC+RX8/ddmBtJRr6hsXie7zRqeTLoYGMxHyD/QP4vPyum+nnW
Rz6C5fv2Ltn17A4Z+YnGYv5a16Pelu0vG4v5DvkKls/VvbNmYC4Z+QvyqPhh
Sx1/sz3yGT5c72ZWmVtYjYz8BjnY/fCUc3XJyHf4iPXFK7vNmDkuZOQ/fMR6
aL0zb3BLiYx8CFmvk7KDJiM/4iNp5Hj66fI/bZcuT/v5SCs08rg0NV9CzpMf
tt02joz8iY+k2Z0/TpNfThrTYsB8H6EXRj6FfMtJt6nDeh9VD5im5lfIZ97F
ehbsISPfQt4d2b7+f6d9VP1gmpp/Ia9p+9l69k0y8jE+qr4wTZ5Vfn3tFs/J
yM+QR5z3qFntPRn5Gh9Vv50mdxvztEridzLyN76CW9pOKrdVi4x8jq8EQWWa
7Jli+Kufia+qV3yn5nfIlmvPFto7kpHv8RV67BpBXT/k+7Ac+R/y79/f355p
w/rIB/mqesd3cs7JzS9m9iIjP0ROGtr4ccAoMvJF7O+m2ctbVWaTkT9i/ZNP
p8tPVpGRTyJHR9T+b3MUGfkl8ir/S8f6xpKRb/JV9Znv5Bnfeu23iyMj/0Qe
duTPjo9PyMhHkbsM2LnxdJqvqu98p+anWB5orDxxZOSreD1uD1MXNq/QRJQj
f0U2V45bhk1EfeSzyNV8LCc+tiUjv8X2vz7FjYj0aiKuD/kucva+AQP7BDVR
9ajv1PwX+VnP8j1tu7E/5MP4edf19nbIG8py5MfIsbcCW5+axs9Dvoy8c1Zm
s+kRrI/8GXm5x+LGzbaRkU8jI+/M/pBfIw+OulXv0SXWR76tiRhvnToPtdj0
gIz8G79fs6raxr3fkJGPY3+ucTE1bD6xHPk59ld3SuvKuf/IyNc1FVzFOffv
Cd2moj3yd+Qfacu/TbVkfeTzyJmb6+dL7mTk98iJ7R5kVgogI9/H/q9WGP36
QUcy8n/kYxeqP9swiIx8IHnb2OP3e04iIz9IXmYXdsNqcVPxeyFf2FTcnymv
Ci5+2ERG/pD1B61beyr2ABn5RPbfQbPAkZFfZH3pb8Juvztk5BvJzqcnbK34
koz8I9l0uMG6+zlk5CPJWhZnlq0vJiM/6Sf467PO83pU8xPXh3wly9OV21uX
jPwl6z9pFjk225nlyGeSr3z3Hnrcj4z8JtsfOaoc0FmOfCd5y8BpXZv28xO/
P/KfLF9iYhpaYRwZ+VDyxEcXWt6bR0Z+lDxgUU+/devIyJeSQ31/N+y+h4z8
Ka+naeF2Z4vTZORTyY4Hmtq+v8H2yK+SSx7eOseesT7yreRKmgSDn5jvkH9l
edFt82pNvpORjyW/m321fHktSbRHflZS9fwl651n/+I7xmTka1n/Uk7ZojUO
ZORvJdF/TPTunK4+bI98rqT6AUrWuy4BaWZtyMjvsv7CahnJmT3ZP/K95PHX
Fj45MpL1kf9lf/2mKhkaSfi5kA8mt3WJv+qzivWRHyb7Zgw+VzaKjHwxud7W
yrG3j5ORP2b/RmEHD6y+SkY+mfXLV2oV1eUJGfllcmHJ7FI3jYx8M/t7My5i
VcZnMvLP5Kz1hteflfUXjHy0v+jvdX6mX+MqZOSnyU81diO2R77aX/VrvJVh
R2A58tcsj/vXpeTIT0Y+m/XP9bB3ueXEcuS3ycfPfI9x9CQj303ep3vbdlUT
MvLf5O0jNu8qDPRX/SNv1Xw4eX380JIRQ0Z+nO0jLBtvOdeZjHw5eV7J7qZO
H34f5M/JUzQPFBn5dPJo90PV0keTkV8nh6+cvrTlFDLy7eRe2a0rHJrD60H+
ndwhoPZcnaWsj3w8udXO3OKxa1gf+Xn+Hv4/L055upmMfL2/6r95K3t3WlHk
vYvlyN+TnY/3GrMthvWRzyfbaDYQ/qp/562a3yfXDv8zeMAFf9XP81bN97Nc
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
Z0vRvsXX51e7aJOhB2X9JpoHmAx9KFkjPzElQy9KdqgU7DnPigz9KD/Por9x
bIYjGXpScq1L2U7BHmToS9mfTq3zBw77kqE3JVcYv8y6RiDbQ3/aUvUXv5KL
73ePGh9Chh6V9T/bO5YswewP+lRy9nzlAML60Kuyv5LDm/6OcDL0q+TnjZRv
TIaelfxg/YgqgyaToW9tKd7XdyPfd/Gt2SyH3pWssSEsIUP/Sj6x99WsVavZ
H/Sw5IP/jvwsjCRDH8v2UT1mTeocTYZelvU3nlECqGToZ8krdM1G1TnB9tDT
kheMyM+ec76l6u9OUfW15OnxVwalx5GhtyWPs1z9tuVdfh70t+QhM/v2OpRA
hh6X3CfJ9YVOCvuDPpfc2b1Mp3HprA+9Ljlk5eNHT3NZH/rdlqr/PEVunh3d
ptEXMvS8bN84YNytbb/5e0DfGyTKG+xsFvCvQpDoH3pfsv1PPXmADutD/xsk
+jNTpj9DMvTArG9w/ORZBzMy9MHkqlUWuK+0Y3vohVleLrzjsQIXXg/0wyz/
KVuXHGnI0BOzv0+mX/b9J5GhL2Z/mrd7BZOhNya/frxhx+ww9g/9MfmpU7hJ
Wjcy9Mhsf29xw40t+pOhTybHvauoFzOM7aFXJp9r8nxFtfGsD/0y+Xjkfq2x
01kfemby/s+TFybOJ0PfTN7eNqiM93L2B70zef3BWjO3ridD/0yOKJ/9/c82
MvTQ7H9en3MT+u9lOfTR5Knnl366cYQMvTR5tEH3EfXOkKGfZv/hYxzeL79M
hp6a9Xvd/Tng000y9NWs39H27psOD8nQW5Nbzd3a4+xztof+Okg8b/4pw5+b
pJKhxyZ7e/l2mPWe7aHPZrnL2qoP334KUt8XkaLqtcm2eSmtAn8Eqe+DeKnq
t1leO+jIzQNlggVDz03W3z2zWVXtYNEe+m6ytub1m2Tovclluimv5wtW3//z
UtV/k7+d/Hi6oRXrQw/Oz/+oc6XBFkcy9OGsnzFUiZCzP+jFySnX+9Tr58v6
0I+Tn5i57r0ewPrQk5NvT/tnbh9Chr6cLD99tC2iExl6c/Z/1jW6Vn4vMvTn
5KMRY9e3D2d76NFZvifTv8aZUWTo08mK+tx4MttDr87ytdveVZo5mwz9Onnp
txPzUxeToWcnz24//2/z1WTo28mTjnSYvj+SDL07eWRl62/a0WTo38kDBxSN
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
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.0010225}, {-1.236, 0.07}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"U / V\"", TraditionalForm], None}, {
        FormBox["\"t/s\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 750, Method -> {}, 
     PlotRange -> {{0, 0.0010225}, {-1.236, 0.07}}, PlotRangeClipping -> True,
      PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Kanal 1\"", "\"Kanal 2 x 20\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.0036000000000000003`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.0036000000000000003`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.0036000000000000003`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.0036000000000000003`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.0001`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.0001`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "False"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.63818336967411*^9, 3.638183383426531*^9}, 
   3.638183583765992*^9, {3.638183616539938*^9, 3.638183680397586*^9}, 
   3.638183826389392*^9, {3.640453490089135*^9, 3.640453537441168*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.638183383018681*^9, 3.63818340167696*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MaxPos", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.0001227", ",", 
         RowBox[{"-", "0.4225"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.0004244", ",", 
         RowBox[{"-", "0.6449"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.000144", ",", 
         RowBox[{"-", "0.5034"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.0004047", ",", 
         RowBox[{"-", "0.5907"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.0001985", ",", 
         RowBox[{"-", "0.4231"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.000567", ",", 
         RowBox[{"-", "0.4472"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.0002728", ",", 
         RowBox[{"-", "0.5399"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.0004896", ",", 
         RowBox[{"-", "0.4622"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.0001682", ",", 
         RowBox[{"-", "0.5911"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.0004502", ",", 
         RowBox[{"-", "0.5425"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.0001394", ",", 
         RowBox[{"-", "0.6847"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.000429", ",", 
         RowBox[{"-", "0.5476"}]}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Maxdiff", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "-", 
     RowBox[{"#", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "&"}], "/@", 
   "MaxPos"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MaxNum", "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "2", ",", "1", ",", "2", ",", "3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"T", "=", 
  RowBox[{
   SuperscriptBox["10", "6"], 
   RowBox[{"Maxdiff", "/", "MaxNum"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Deg", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "7.5"}], ",", 
     RowBox[{"-", "5"}], ",", "5", ",", "7.5", ",", "10"}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.638183397445466*^9, 3.638183523150275*^9}, {
  3.638183559607624*^9, 3.638183738073312*^9}, {3.638183843162343*^9, 
  3.638183846206551*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.0003017`", ",", "0.0002607`", ",", "0.0003685`", ",", 
   "0.00021679999999999996`", ",", "0.000282`", ",", "0.0002896`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.638183477166223*^9, 3.638183525599578*^9}, {
   3.638183561946129*^9, 3.638183692213336*^9}, {3.638183731789412*^9, 
   3.638183738351809*^9}, 3.63818384667202*^9, 3.640453543418571*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "100.56666666666666`", ",", "130.35`", ",", "184.25`", ",", 
   "216.79999999999995`", ",", "141.`", ",", "96.53333333333333`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.638183477166223*^9, 3.638183525599578*^9}, {
   3.638183561946129*^9, 3.638183692213336*^9}, {3.638183731789412*^9, 
   3.638183738351809*^9}, 3.63818384667202*^9, 3.640453543420086*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"Deg", ",", 
      RowBox[{"1000", "/", "T"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nlm", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"data", ",", 
     RowBox[{"{", 
      RowBox[{"a", " ", 
       RowBox[{"Abs", "[", 
        RowBox[{"Sin", "[", 
         RowBox[{"x", "*", 
          FractionBox["\[Pi]", "180"]}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", "a", "}"}], ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"nlm", "[", "\"\<ParameterTable\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Normal", "[", "nlm", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "15"}], ",", "15"}], "}"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"data", ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.012"}], "}"}]}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.63818374221224*^9, 3.6381838119955*^9}, {
  3.638183858978926*^9, 3.638183927042891*^9}, {3.640453648996003*^9, 
  3.640453718338507*^9}, {3.640453865637609*^9, 3.640454006538999*^9}, {
  3.640454061314148*^9, 3.640454063275928*^9}, {3.640454993823792*^9, 
  3.640454994101311*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"a", "57.74781781582763`", "1.102175412186594`", "52.39439854792474`", 
      "4.7883515337092837`*^-8"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.638183775711627*^9, 3.63818381228991*^9}, 
   3.638183848966567*^9, {3.638183885922227*^9, 3.63818392938824*^9}, 
   3.640453546225585*^9, {3.64045365464445*^9, 3.64045371911916*^9}, {
   3.64045387545049*^9, 3.640454006868446*^9}, 3.640454063795047*^9, 
   3.640454994713558*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJw1lXs01PsaxuUyuZVoomlLYzAuM7+kEInv241cuonILUkIh2ySW2QIaXcV
0iAk2ZKSwUnp90MutSVmyDUxBsVgdih7a+c4a53zx7uetd71rGc96/nno+4V
bH9aXExMLHL5/qtm/WGTS0sYkUT+pSdCgEHZbOGM9SJG4PTel/xPGNDku2bT
vmFEgWvJbbt+DGTNjX5oT2GE98ZrG6lcDPpy5+UP92GExa1bt5twDCK8wjfn
cTAiY9CWosjGgPPlfAicwYgeBZ8r2Ucw2LwQ9f0il0msdo2Ov/qKCQ89Ke8e
XGEQK83Lb0rHMeCKXPGDUBc94sbZfImxo3pgcoSz3kJfl7CMtNkvxHQhgO/s
WDqhTZhGmshaTmuDdNXU7YYXdOKbIMTNqoEOjK4NubGhWsScyXuZq7FaoHK9
cZexgSZBfcelrkWaEHTF83OGpAaRNzpyMp6sAba8NGf2K3Uiyb0ul9GuDmnu
1X/sv0YllKsHU4byqGAlVf5stFmNyLB8P2c0rQZhYxon40GVCF615Kjmqwrh
dufXBQsoxKswj7Yk2Q2QaL3oVuioQtC0d/eeiFIBrZioXi6XTNAamycvzJOB
va3P9Wi0EtFkeK8ghq0EppJdfGO+AjFH/DT8Z9UaGCupogRoyhH+Yf6/ajnJ
QWncX+GbV5AIGtmpJoRBggx8q4VgXozoOK2xiq6yAhyUXGgxrAU8PF1BYmfF
AnKSoOllZwvxuAINBuWDEAX+Efq392Ehjnjt/jaXhYiV1vgWkxTiUT6DOdE7
hahU40wAHjCJ/5NdMPixYBKJ731ayt8xgZsXJ7XlB0+gssTl9XvHccwk4pK2
zGckSXI1rFo3gsft7TNn7BxBG9pKJePe8HFetx/DdYaP9DN+dlpd4OOnVDPX
XCngIxd6wblewTAOhS71E9J89MTyS9WPiiH8rKpR8+9dQ4izeubXpMIB3PbA
2Ljd4ADyVNS5kLeRh3eLD10z3stDM0GyAVtSuLjRMxIz6zEXxbYKnYmvHfjq
wJ11i8pclJNcbjjU3I7Pa3R1El/aUeXiuR4kaMXdDkQeSld7h0o62VUWVxvw
CY0evxpOA2q57nnLw6se94hRGI5NrkfjNlpBsdvr8HAlnyN7XOqQNcvdNqah
Fi9P5JvcWapFFq4JutGBHLw/UqKzJp2Dojvkh2uUn+Hjqv5ee8yeoZDrTIP5
+Cc45x2Vm1n3BPn42SvM6RXhZnKmTc+ditCQw+nY0Lh8nGQrVf62IB9VsUR9
ow+z8EWZQp3q/iz0yFX5ueDwDZwljQQ9ITfQRa7I7dp4NH7z3tlTE5tikHPa
jIPwsxe6Lk8t3ahwCgm3ipzN/ZKRwYs6qcTMZBQP9m2b5NKRoMvUNs8oHf3m
yxRRvXKRvsO11Nh7ucjOSkLm5sB9pDoc5FEmWYg6XERZiinFaOD12uCc58Vo
GkbdL888RZTZM9W1iuWo/K1rkfW+CtRu+Z1pFFiBwhy40zLsSvTq7u67pU2V
6C9fPC7VsgaZPVZyZkfXIFZza3tjWx1qMbChvfxah1pTQdbbgou2Zikvbj/F
RVErb21nDXGRtu2+1TkkHtJJHPHOY/EQu3daRbyEhxIuJOEDTZ1oiRWwqlXU
iXacbQ1zPNSNvr6hRJyI7UbFjs6fLD0H0Fk7QjIxawDtXmPSR941ghLbQj8N
+Y6gjf2Hnnz3mkLnf9ee+JkzhdY9ME9Xpi+gY7JB5prHFpDxRemEN1tXgKBp
1jfaYQXU1kcfSd9BgoKiFCuz0yS4u4iRaydl4VOOzgk1NTnQT0A9eivWgFfN
3h80tTXwMiGZqnVSCdaHxLjqxytB9cHObfRKMvymuBfndJOhiCWq+GSmAuO8
qH9d9lQBwoC52SqTAmN/KiVALQXarLev89VSBX+jFj1xO1UgfTz5zTBFDXSq
U7wyy9TgWM7+jsRgKgjkDyZtYVHhvliLuy1HHR7PjKWNNapDkrrTuN8IDTgb
Tmy9NEuDkW8HHvIZmnDoewfprakmnDdobj0RpAWvaw1FUZFakKd7eGYbmw5h
R+s7KPfpsOcD7Pce1oaPiTdpm0a1IRp25U4q6sL+wqXatcs6ofD6ePhOPTjP
Sl0IN9YDXlqZrftFBuhzyL0/Qhlg31W8g13GhJ+V+bbxbCb4SwW+G6pgwujx
i5SHeUyIN9L3pD9ngica6G59wISn6ZWXyhuYYPZQjL7+KRMUjtW3N/cw4VLX
45Vlr5nQ+qHfZ04cgw+bdAc/TDHBsmd12gEnDJ43UF+rAgYe0lytNDcMRqcg
G/ZhcM4k/d89JzEgMy55e9tgUHjnl8FTgRh8rglqfOSAgcRxHd2oeAxMTSNa
TM9gQPTuwoseLecrzbfb38KgR0bKXvgUA9ZR6ZJzmRiITFsEBlUYNKquDb2T
jcGmuwdlawkMMrQluz4WYRDr4urI61ruYUzq8X2x/E9V+7x+mXtuvOQtqcu+
xzXDUR5DGMxWTUSUNmIwsMEv78sEBvkG1r2i9xjM2TC26YswuG+C/lRazpGP
nm4Mm8dAxUfuL8M+DDQflTvX/I2B1NcS0bFlvv6Pv/B//v4Hp7WSrA==
      
      "]]}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.019444444444444445`], AbsoluteThickness[1.6], 
      PointBox[{{-10., 9.943652635067949}, {-7.5, 7.671653241273495}, {-5., 
       5.427408412483039}, {5., 4.612546125461256}, {7.5, 
       7.092198581560283}, {10., 10.359116022099448`}}]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-15, 15}, {0., 14.946234467797932`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.638183775711627*^9, 3.63818381228991*^9}, 
   3.638183848966567*^9, {3.638183885922227*^9, 3.63818392938824*^9}, 
   3.640453546225585*^9, {3.64045365464445*^9, 3.64045371911916*^9}, {
   3.64045387545049*^9, 3.640454006868446*^9}, 3.640454063795047*^9, 
   3.64045499488102*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"57", "/", 
  SqrtBox[
   RowBox[{
    SuperscriptBox["12.3", "2"], "+", 
    SuperscriptBox["2.2", "2"]}]]}]], "Input",
 CellChangeTimes->{{3.640454950095716*^9, 3.640454963546102*^9}, {
  3.640455003963779*^9, 3.640455049959863*^9}}],

Cell[BoxData["4.561752049244976`"], "Output",
 CellChangeTimes->{{3.640454956127406*^9, 3.640454963983337*^9}, 
   3.640455011922401*^9, 3.640455050622683*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox["12.3", "2"], "+", 
   SuperscriptBox["2.2", "2"]}]]], "Input"],

Cell[BoxData["12.495199078045937`"], "Output",
 CellChangeTimes->{3.640455254349988*^9}]
}, Open  ]]
},
WindowSize->{1276, 714},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Linux x86 (32-bit) (September 9, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 3210, 83, 231, "Input"],
Cell[3793, 107, 44975, 794, 488, "Output"]
}, Open  ]],
Cell[48783, 904, 91, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[48899, 909, 2615, 84, 166, "Input"],
Cell[51517, 995, 398, 8, 32, "Output"],
Cell[51918, 1005, 401, 8, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52356, 1018, 1386, 38, 123, "Input"],
Cell[53745, 1058, 1031, 22, 48, "Output"],
Cell[54779, 1082, 4123, 78, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58939, 1165, 258, 7, 54, "Input"],
Cell[59200, 1174, 159, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59396, 1181, 116, 4, 45, "Input"],
Cell[59515, 1187, 88, 1, 32, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
