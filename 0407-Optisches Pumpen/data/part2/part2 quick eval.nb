(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    115200,       2312]
NotebookOptionsPosition[    113563,       2255]
NotebookOutlinePosition[    113900,       2270]
CellTagsIndexPosition[    113857,       2267]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"path", " ", "=", " ", "\"\<./04.16/up-etalon_zoom.tab\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ch1zoom", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ch2zoom", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Import", "[", "path", "]"}], ",", " ", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ch1", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "*", "ch1zoom"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ch2", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3"}], "]"}], "]"}], "*", "ch2zoom"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ch1", ",", " ", "ch2"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "750"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"PointSize", "[", "0.0001", "]"}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Kanal 1\>\"", "<>", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ch1zoom", " ", "\[NotEqual]", " ", "1"}], ",", " ", 
         RowBox[{"\"\< x \>\"", "<>", 
          RowBox[{"ToString", "[", "ch1zoom", "]"}]}], ",", " ", "\"\<\>\""}],
         "]"}]}], ",", " ", 
      RowBox[{"\"\<Kanal 2\>\"", "<>", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ch2zoom", " ", "\[NotEqual]", " ", "1"}], ",", " ", 
         RowBox[{"\"\< x \>\"", "<>", 
          RowBox[{"ToString", "[", "ch2zoom", "]"}]}], ",", " ", "\"\<\>\""}],
         "]"}]}]}], "}"}]}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t/s\>\"", ",", " ", "\"\<U / V\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.637565191222225*^9, 3.637565250415153*^9}, {
  3.637565281892177*^9, 3.637565424061915*^9}, {3.637565463206695*^9, 
  3.637565477378036*^9}, {3.637565934911824*^9, 3.637566000562091*^9}, {
  3.637566036145206*^9, 3.637566163068161*^9}, {3.637566193527112*^9, 
  3.637566209453878*^9}, {3.637566329351447*^9, 3.637566340752412*^9}, {
  3.638165310394884*^9, 3.638165369453461*^9}, {3.638165400772441*^9, 
  3.638165400865404*^9}, {3.638172390994794*^9, 3.638172439590148*^9}, {
  3.6381744439541*^9, 3.638174444054196*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         PointSize[0.0001]], 
        PointBox[CompressedData["
1:eJxd3XOUHFsXxuHYtm3bScW2bTsTcxjb9sS20+HEtm3byden3u76re/ef+56
1ukkg+6qc/Z+d3fq1j1qtwsTKlSovxFDhTL/9/6XNOeddBH8r7g+dHw0atv3
yyX+348dd0per1qsvu/+s/7ZcfYyyV49LPDzP4//5/jir5BrCxqFsf7/z4dz
HPPqv8KnZ0a0Dn/J1HTiIe/fF8VZr7Kx0LwfV6I56/r7Yzouc7SQb9wosR3r
34vjuFWeermyrIrrWP9+PMd+C3s9KFkxgWN9PQkdL4g2YUqDZ4n+8/Ulcbx3
4Ooy3UckdayvN5nVeW+fqYnCXXXdfBryOSh9Csf6+lM6/r3qw8VqrVM51veT
2vHY+75Zb2zC+v7SOE6SMEZQ29BpHev7xauqzbv9rmY6x/r+caGgLPkHL0rv
WD+PDI6P7d45PsJ7rJ9PRsf1P5R/OtnKZMUJPHBycbmrnp9XJmf9ScYrJZJP
zOys6+eXxXGf5m1mrryL9fPM6jjs9A/v8ubI5lg/XzzllG9F19DsjvXzzuE4
dZgYiyufwfr553TcMNnZ351j5HKs30cua3elaGGyjrzqWlQw/qpc21nX7ye3
s/6sdtN6X5th/b5wzu5LQ+8Nn8exfn+43+iX6/zXYf0+8zreH5y7cYV6WL9f
HP7AgAjR/2D9vvM5rnbLtfliMNbvP5/VOlbDwluPX3VN+xqhxayq+R3r+YBv
x64etflnrOdHAcdps0/fkXYe1vMFd6l4u82LMgUd6/mDN7dJG2vDK6znUyHH
P4eZZxLW8wuXmrOpY5GihZ3vT8+3ws7va7T7xR7qUeH/PP+KOD5/3jp4dEyR
/zwfcaLXI7qNzVP0P89P3CLi2cS1bhb9z/O1mOMVaeKHJAgo5rwe9PzFb4s3
9bmdubhjPZ9xgUZLUyy5UPw/15MSjof1eXmyw0Cs5zs+OjF3/+yprf9cf3D0
NQPSfjpuOdcvvR5KOutZHt3r0LRQSWddrw98tmfYEtY4rNcL9vmbIV6a+yX/
c70u5Tj+uMovw+XDej3hXYm7H3g2spRzP9DrCzdbMXnGyVtYr7fSjkPn39Z1
XU6s1x8OPnS99KRArNcjrljzd6Le17Ben2Ws3h0nvxliXXG9vpPyXb2sWK9X
PKmL+Y6xXr8474/2c5Newno942sjxvT6m6GsY72+8eB46ys8GIT1escpl1xI
fuRsWevU4nLbP/257Hn940M5v3xanqacY10PcPt9iU6O7od1fcBRqhRb1PUk
1vUCr7/eol+NFOUd6/pR3kp764f7lX3ZVat9YNU8PljXE2y+uvghWNcXPNv/
5PdviSs41vUGF4/59uzNbljXH3x/Xuxl+w5WsPRzvOy5HmH7241f0bGuTxWd
P59pZ8NagZ1Y1/UKny43JGP7fVjXL9zj0sI/FWNXcqzrGY7b6vClrO2wrm94
x9unq2LsqmRdqmauiJc91zvcZEgUvw/RKjvW9Q//i5yj/uWWWNdDvGRmrWw7
tmJdH3H59H3DzIlUxbGul1WsrCMT3Dj77ZLr5eZZ14c0xbp+4gkl965vsRHr
eopzn70XVDpcVce6vuIrTcI2Sd8Q63qLB77IkDvSWqzrb1XLvjxvv+RK3r9y
xFf/WNf1uJqzfiBc9ztn6mBdn3HbKZO3bFyBdb3GkVJtGz31F9b1u7rjtevM
CwTreo5rFP2dv9FSrOt7dct++vW55Pp0PGW0Yt+wrvc1HM+sX+ZhiipY139c
9HH7naEXYt0P8N1eYyY8/oh1f6jp+OC/+u6XTE0rr/3fJc/9Ak8N6ej+F7Hu
H7jd+EGjyvfHup/ggnXHfSq4GOv+giMnXdA88yms+w2++WDDiSRfalpjuz77
5f6nPfefWs762pUH80VLWctZ1/0ID7NfoFj3J1yzwJMo73yw7lc4zZ+vfe/P
w7p/4c+HIz24EFLLerRs7pFUGy967mesh4xJUvXwe9Z1f6vteJZ5eSbBut/h
zolKpFleFuv+h4veqzF+Znes+yGOvrzV91GzsO6PtS39uYuue117txl0iHXd
L1nflHf42S6vse6fdRwH/pxRuFkCrPsprndwZXD1klj3V5xx1O6YJTtj3W/x
j+qnB+WehnX/rWO5Nzf1Y2S/6DoZ/+6TNPux7sfY3G3jPce6P2P71xGnrmPd
r3HJznEzfiuKdf+ua72utTPF8FcXXHFyp5/yvB3WdR0//lbgz42JWPd3vH1/
xY6ndmHd7/Go4Y0v7X2Edf/Hjap2LbE+ej3H2g/grHGHrVpYEGt/gN1fXLzJ
repZZe0n7AXPfgGfW7TYN2As1v4BL+6w5WXvbVj7Cdw7x9F67e5h7S9wuS9X
D9SPXN+x9hs44d7nWSvmrW/Ncz87fTpe8Ow/8PMA8wTk8dqPsK5zBdb+BI+L
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
ow==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         PointSize[0.0001]], 
        PointBox[CompressedData["
1:eJxdnWV4k9u2hXF3d3d3hw93Le5enApNaUoTkjRQnOJstEBxd6cUKe7u7u4O
N2uNZI57uv/wvM9Kk0+WTBnjnLx9fLz6x4sTJ87fxHHiqH89/936YR28L+Bw
1IeBj8Zt/3651v/yY+FBOdu3SGN6F2v8s3DJejlePaz0M9bn/wlf/BVzbVHn
eMb//n0C4dRX/1U9PSex8b/fl0y42aYqC35cSWH87/enFq53tMro9MnSGv/7
e+mMURk2NHoQfCSqd7n2ZYqtTh/r9zMI2xb7PajdOFOs68ksvCjFlOkdn2WJ
dX3ZhPeZ19QbPjZ7rOvNIb9/82nMZ2fBXMK4/tzy+d+rP1xs0SdPrPvJKzzx
/ujiNzbnjXV/+YSzZU7l7Bc3vzDul7y6xYLb71oXkN/H/ReQ8SrOYhVHRRSU
cTyPQjJ+bM+uyYneF4r1fAoLd/jQ8Ok0o0is50V+UvhKrZxTi8Z6fsWEA3r0
nbPqbjH5fTzP4sLxZ314V75UiVjPt4SMTz81unGUpWSs511KOG+8VEuanikV
6/mXFu6U4+zvwanKxHofZWQ8onLG1WV2kPF+ygo/8+rW/mt3Mt4XufTwZXH3
JSwnjPdHDhz/cr19PRnvs7zwgciyXRq1Lx9rPpMTHgxKlPIPGe+7gnCLW1Fb
LkZWiPX+yTO/Juo5t3lFYcwH8u20LZP3+Fwx1vyoJJy/5Kyd+ReQMV/IQxrf
7vuiXmVhzB/ylr7502x8RcZ8qiL8U72WGWTML3KdeZsHVqteVRjzjTzetdjj
PCJj/lUTPn/eiD46gYz5SM7yeuywieWqx5qf5J6Jz2Ztc5OM+VpDeGW+jDGZ
HGTMX/Lbmt38bxetGWs+kyt1XpZr6QUy5nctYWvAy5MDzGTMd/LRqWVHlsxr
xJr/5JRrg/J/Ok7GeqgtXOzRvQHdqpCxPshnfePXMiaRsV7I/n8LZch3n4z1
U0c446SmLxNUIGM9kXdnHX7wWRgZ64vcfeW02SdvkbHe6hrZS98pkMh+NCpu
xe1D15euG2v9kSMPXa8bHkrGeiQ3bv07y4hrZKzPesKv7+R+1754Pfk9rFeO
hw9Rd0zG+iWX/+E9P/slMtYz+drYCX5/C9WPtb7J+JeM9U7OvfRCziNnyVj/
5EOlv3xaka9BrP2A7L0/y8nxgWTsD+RkzWpEDD1Jxn5B3nC9Z2CrXA1j7R/k
Nt6hzcv5k7GfkNXVZYwhY38h/2c/+f1b1kax9htyzdRvz94cRsb+Q76/IO3y
/dFk7EdkfbsZG8fan8hFdnVqEzqIjP2KfLpBSGHv/WTsX2SfS4v/NE7bJNZ+
Rk7f+/Cl4v3J2N/IO98+XZ1qNxn7HblrSDLbhxRNY+1/5H9JS3W43IuM/ZC8
dE6bEju3kbE/khsWNMWbl6RZrP2S/HLL3Osh3cjYP8lTau/b0HMTGfspuezZ
e866CZrH2l/JV7rG71qwExn7Ldn8olDZJOvI2H/JOUc2TfzqHxn7cQvhgwmG
3znTloz9mdxv+rStm1aSsV+Tk+TZPn7GLzL275bC69arBULGfk5uVf13xc7L
yNjfyZ+O505R4xsZ+30r4Tkd6j3M1YyM/Z9c/bH3rriLyTgPyHf9Jkx5/JGM
86G1cPS/Dq4lQ8Z5QZ4RM9D1i2ScH+T+k4PHNRxJxnlCrtxu0qfKS8g4X8hJ
sy/qUfQUGedNa4nnbj7YeCLbF47j/GnD578qukKK3GScR2SrXqBknE/k1pWe
JHvnT8Z5Rc7356vp/gIyzi/y58NJHlyIIeM8I8dMyNb88Hsyzjcv4blqeWYj
47wjD85SK9+K+mScf+Tq91pNnjOcjPOQnHJF7+/j5pJxPnrJ8703dETf4EMc
x3lJ3lx+zNkhr71i5SttZTz05+yq3TO1lXGcpxxvH70qsmVtjuN8JRcetyd1
7cH8PM5b8o+Wp4PLziTj/CWfzHj3Sb4DZJzHZHXaZnjO38P5zHH9OtK1k3Gc
1+1kvPbg9IW/VW8XKx8jpytbcPrz/mT8Hfnxt0p/bkwl43wn7zjQeOCp3WSc
9+RxY7pc2veIjPOf3Ln50FobUrYXRjxALp7eunpxZTLiA7Lr4jJM601GvEA+
F7FktGMiGfEDecmArS9HbCcjniCPKHW0ff97ZMQX5AZfrh7skLSDMOINcuZ9
z4s3Lk9G/EF+7lATkIx4hLynSYp4xcPIiE86GFg3h6Impck1LMdmjiNeIfe4
Vvp6ylv8POIXjpdZVKfevwQdhRHPkOP1b7vhfSky4hvy5eL9sz7sREa801F+
b8XHQOclB8cR/5CDdo97d2QdGfEQ/76JbV6XHVfJiI/I2RutO7oyTidhxEud
5PvepDxQ5r9iHEf8RI66fG7+hHZkxFPkafMfJAqxkhFfkfv2+eQ3bBUZ8Ra5
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
h8mo18n9R12uV2FP6HUy6nfkmoX3+4S8kefprueRVyRTFbHBwqjvkfV2kJmM
eh/ZlfyGe5cgo/43WPaHB9vuN+hZh4x6ILmpDmDIqA+St476uKn1kMGyH6Fe
SM7Rc5R3ExsZ9UPyGBUezCLj3CO/LTj5QrU1ZNQXyR2TZgorH0VGvZF88PWi
GiUuD5b9FvVHctHzhT8WeEFGPZI8feumlTn/klGfHCL8S6UL6cmoV5JdyUy6
1EXIqF+ST3dvdjxxzSFynqCeSa5Y57Iljhc/j/omeVEBVcDk51HvJCdO8vT5
h1Fk1D/JunwQTkY9lHzj7Le2j5aTUR8l191iS3p7Dxn1UvLaWUldWyoZ9dMh
ch5nME8POPOY46inctzSLXuxmB8cR311qIw/NSLvHUg1VMZRbyW30gEHGfVX
8q5EO5puqkJGPZac92WtOKtb8PdQn+X4hDPHti/pQ0a9lqxWx7yRZNRvySq7
nDGJ3496LsePjOxzdeISMuY1uWTXVxOdO8io95Jn1wqoYzlFRv2X/C+vKpiQ
UQ8mD0w4dt3wL2TUh8kXnqfqMyDZMGHUi8m6/JibjPoxednGPGc6VSCjnkxO
MWO1o00TMurLZFNguSpNe5BRbybf7bz3Td0RZNSfyY1q1l9WfRwZ9WjyJnV5
C8moT5OzJuiQquQWMurVZMezu4cLHiOjfk1W1eRct8moZ5Pb6gCBjPo2ed80
sytEHS6MejdZb1fZyah/k6d0mtgqbhky6uHkb9UzJPxZn4z6OLlX7oV7PnYm
o15OPhFPVSjJqJ+Tyz3dUPBxKBn1dPJ8Fb7MHS77Herr5AS6wEFGXYQ8LLxJ
w7OHyKi/k6+OUBWx4XJeoB5PNjp23Rz1mp9HfZ7jq6qpgrmPMOr15LQqnclE
Rv2ebI779cLq4mTU88kPH1vDltYmo77vI+evOj3mt+c46v0cV9WXGYPJqP+T
c07NumrSaDL6AT4SL+jyxkwy+gPkd+1Vxk9Gv4DcSR/oPhLvoH9Ajs5R0+pz
iYx+ArlYnJjyA5+T0V/wkXhrxqOWL3r9IaPf4CtsfTTkXImkvhLPof9Ahj2A
jH4E+ZmW75PRn/CwLWp+ld33lhQho19Bbq0DWl+JT9G/IKvoZ15N+byBfob8
nrHbla1makxGf4OsqoszvOR+DfQ7yPn8pi5P3d3z+Qj3v74Sv1992DbOpAFk
9EN8Jf6f2C5L1yT+vpI/oD/i+b5NhhFze7szxNezXg30Szzft834XHlJmrhh
vp783UD/xPP9uwxd3p/m66l3GOin+Hrqm4Y+/ud7fu+ggf6Kr6efbKSd/DZP
4Aoy+i2e6zlkHP27xRWheq7niIH+i69Hr2sE+468Onyv5/piDPRjPNd33Cj1
sHrZV0fJ6M/4GsgbThiP1OM777n+kwb6NeQ5R488fXSTjP6Nr4G46pTRvPL4
Or2ecBz9HHIcXbDk76G/Q96eLd23Tj95fej3+BrI+48ZgyZdbXMlgZ/cH/o/
fvI8cv2dt65Naj+PXsNAP8hPnp9OZ7L6yfNFf8hP3kfYg/x9mhbwk/eFfhG5
etvn+2JK+Xnqgwb6R37yvt8fWZe5XlU/mQ/oJ/nJfIms5OcfVc9P5hP6S34y
3zrpBo2fzEf0m8gps/0svKuTn8xf9J/I0RMPOCr09ZP5jvskB/5x3Nk0zE/W
B/pT5GI+asX5yfpCv4p8735yVwTjJ+sR/SvyDK/zbwpOJqOfRW6syjNz/GS9
o79FVqdhrqVk9LvIm13Zy7x1frK/oP9FVtWmzDvJ6If5yf6UbeKKrTOiyeiP
kdVumuY0Gf0ycujw0q4pKN/v7p+RK9//5PpGMvpp5Ndt1Ewio79Gjjgc4jpC
yei3yf1HtdMJlL8w+m/kpCsTlv6ZjIx+HFmXmzOS0Z8j+6vjKDcZ/Tpyod9e
hk8xfzmP0L8j3xqWed6rCmT088hT7936PMAgo7/n+f6IqPptVAeK4+j3cfz7
oX5rerUjo/9HXl9BFYzI6AeSe69407PzIDLWHTlTli17rowgo19IVk/Py0pG
/5A8+lc137PjyOgnknX7bAYZ/UXycxVeLySj30he0Hqcrd4qMvqP/hKftD7U
/FbUFo6jH8nxhLpAznH0Jznu2uzDdx0jo1/Jzw9Xr/cix9G/JOcb36Ph5tv8
PPqZ5Gs/8y0p+YyM/iZ54tBnv1Z/IKPfSa59d22HQr/J6H+OEP7cynfz0kRk
9EPJq9V2n5aM/ihZlwuyk9EvJadbvj86cyEy+qdk1d2bWYaMfip5lCvaSFOd
jP4q2bV4L05qQEa/lazDv9Zk9F/Jc+/MCBvThYx+LLl5q04P4/Ynoz9LjqsD
WDLOUfL2cupAIqN/Sx4cufxjoJOMfi45V6bBLT5NIaO/S76kyp//kdHvJYf9
+Bjv9TIy+r/kGkN2dh+4gYx+MPn97VG7Hu8aIfsL+sMcX96ydvrehzmOfjG5
s07Yyegfk1OVO3G883Uy+snkQ8sm57/60PN74e7+MnlkRlXBJqPfTC4elskV
apHRfybf+36zfLN4AXJ+oB9Nnjl48ZRjKcjoT5N1OyczGf1q8p8WReofzEtG
/zpAzkdXcrmoRgky+tlk77Kbf+yqREZ/m5xtmcl1xMn3G+h3k89lqLZxczMy
+t8eDjdCx/5NWqoDGf1wchV9gJDRHye/HhQWVWhIgMQr6JeTl9xq5rpEz+cj
3PseWbuhbQEST6GfTk6mGzIBEo+hv07W7elZARLPod9OHqHS18We39tkoP9O
LuyKxtOsCZB4Ev34AIk3b415Wm3ytgCJR9GfD5B4NfzbmllJowIknkW/PkDi
3fqDfN6POREg8TD69wEST/9Q0+9ygMTb6OcHSDy+vvn35da7ARKvo78fIPlL
H92ADpD4Hv3+AMkHMpWxdx35KUDyCfT/Pdd32ji1pMGOT38813fWgB7A5H4+
5w1lrvdNYnJf7wUD+gCT+3ovGhXUcZTOZOAcumhAL2AysO4uGbocl9Pkvv7L
BvQDJvfvXjYWDlQVP5P7fq4Y0BOYDHX1WRJcNdrczB7Su5zJfX9XDegLyIma
3796pwYZegP+/Z79asPn90N/QPZR4WkbXg/0CLz+/K7T16ubyf0+LhnQJ5Cv
pftY55w3nwf0CiYDcesFY5Jzx4JmfiZ3nnfegH6Bz7f21+Bvx0aZ5Pnjukzy
fr4MUBG5Sd4f9A0myf90uhpuknwPegeTzIceukBkkvkC/YNJ5lM6nbCaZL5B
D2GS+XisVJv9FTeZZL5CH+G5/oPGqIiMrgjQJPMbeglymXQ3/UsdNcl6gH7C
JOvlceiiM2vOmWQ9QU9B/u9LnyKFb5pk/UFfQW4xoHDosscmWa/QW5Dj3Xjl
ijhMsr6hvyCr6v+CHybZD6DHIGMeBbKfq/UZ5Nyu1TYzFRl6jUDZn3S7NCsZ
+g3yuLTqhCNDzxEo+18NvUGToe8gf/jctPPYKmToPQJlf13unXpbvHpk6D/I
Xa5fSjW6BRl6EHIq3QAMlP0c+hDy4b3djozsQ4ZehDyyZN7cn4eSoR8hl1j8
xOw7MlDOE+hJyK7N+fJrOxnvnTzLoRJMMvQmZC3/mE2G/oT8t/+3x72XkKFH
IW+5tte4u5YMfQrZWwseAuV8hV6FnH1vfdeMIUO/QlbRadtTZOhZyE61PK6Q
oW8hV0kzPWHz+2ToXchv7B16HX9Jhv6FvORTNtcVkqGHCZT4okP/exmj/3Ec
+piRwsmuLfOtmYwMvQw5Sh2XGUbK90E/w3Fd7s5Nhp6GXKSEUriQoa8h3164
/VapCvx+6G3I01IHV1pbi5+H/obcwF5rWuEmZOhxyD9V+NyWDH0Ov39Dv2MN
8/QgQ69DVt27BQPJ0O+QM+uEkAw9D1mdRrMsZOh7yLbiNzanHUfGOUDW6fR0
MvQ/5BeqfbeQDD0QeaGt0KGxK8nQB5G9Pr7MEX8LGXohPq9E/TaOHL2P49AP
cXzvFdWA4Tj0RBzX5bULZOiLyAV2/w77fIsMvRH5erHoh75PydAfkScvGFPz
zXsy9EgeDjfq6A2QDH1SkPDX0ak+PUlIhl6JvEb9k4YM/RJZyxGykaFnIqfX
DWcy9E1kNfuulSZD70QOcWVvbasFxdI/kVX343x9MvRQ5Cfzhw1v3ooMfZTn
+yOM/1KqBI4MvRS55WilCCBDP0WO92GPNXp4kJxf0FORd/YZfaOmmQx9VZCc
l0O0wIYMvRU5T8MkUytNIeNfspZXzQ2S8xt6LPL4otPql17muV6PPotcc377
xWvXk6HXCpL44mMKVYAmQ78VJPHJCqvq+ARJPAM9F7nL+6Ub85wJkngI+i5y
arV8rwVJPAW9V5DEW0otlfVhkMRj0H+Rg1zR2qzXnus/6NaDBUm8p6qd6b4F
SXwIfViQxI8PiphNU+KaJb6EXsws8eeseTXPJ0thlvgU+jGz5CdN1ccymSW+
hZ7MLPHvX0vMmPh5zQb67Gfc+jKzgb7iOWPruwn3Rxc3S3wNvZlZ4u8BvVXH
2CzxOvRnZslHcuiEyyz5AvRoZve5ds04X//6+89Nze51fN2tTzO7r/uGMUaF
9+3Nhr7cHDfdejWzoa8m3y2jahFVQTUbRbtNPfSlyG23fs1snHDdbbbSd4w3
/xWMO3iw2Rg47U2IUfGuAT2b2f1+7hpLk7/s+jTAbLi+XD1CA/o2z/3fMzpY
NuzoM5oMvRs5+Tv/tPfGk6F/4/fpdH8mfx95hed53zECdMHY8z5uG9DHmd39
q1uGqm60W+15fzcN6OXM7u+5YdzZ7gw5v9Xzvq8b0M/x+boO32vND/D5Q09n
lvysod5g+L6gr+P71OW/S2bJv6C3M0u+ujFk9rPoO2bJt6C/4/zp+7ZL3VrP
zZJ/QY/H+ZdFCxzM0q+DPo/z9fSFR98q/TFLPga9XrDMb3u9VV5bEwfL/Id+
L1jWh24HpAuW9QM9X7CsL8yrYFl/0PcFS362aK5KkMjQ+wXL+vVKpjLgYFnf
0P+RE4dYs+StESz7AfSAZKWeWdiQDH1gsOwvvlrQFSz7D/SCZJXNzO4aLPsV
9IPkG3VVxkWGnjBY9r/J29rdneJLhr6QXLdQ1qrJR5GhNwyW/fXrHFXgJUN/
SF6r5ALhwbI/Q49I1l83j4z7Imd4UyzydyQZesVgOQ+O91AbAhn6RbLl/NbO
X3aToWckl60btM3vSLCcR9A3kp9sreGaMmToHcnz1PZygwz9Y7Ccfy11g5oM
PSQ5ftIJufu+JUMfSd4Z3DL43ncy9JLkoa/TuSKYUcLQT5Lz6ISGDD0l+YoK
N7KMkvMf+koy9lky9JbkWlsL1G5Rkgz9Jb/fdbOuE5Pj0GOSV85e/6VBXTL0
meSuSfxbH2pOhl6T359GpR8dOQ79JvnIq58J9/YmQ89JNuuCLBn6TnLJc6F7
twaSofckq/9xyzJ2MvSf5NlbUvitm0iGHpSsyxGzydCHkv/NmuXaEcjYJ8lb
E3ex511Lhn6UPNCcy5XCkaEnJev/tc2DZOhLyRe6qYYyGXpTsi5PXiFDf0qu
VrtMo6n3yNCjkt9u/rwk+Usy9Kl8v8vyqwSE49Crkl3JW8cE/8jQr4YIp0is
7pgMPStZtyvSk6FvJWs5XS4y9K4hXM867iBD/0q+c6ZtTv/yZOhhydONLEFv
a5KhjyU33Hz74uDGZOhlyb9U+9KLDP1siOxHG2f2H9e3O8ehp+V4v0RKMUWG
vpasrq6bPxl6W/KZF2rBkaG/JavqeLswMvS4IbL/VlJyhmlk6HPJ+nYXkKHX
DZHzYPGmI/FPriDjdzzva5vRVjeAydDzkpPMbLH70N4QOd+g7yXvS5gugxFD
ht43RM5TLW86T4b+l1xQJwwhcl5DD0y+0aVngW1PQuS8hz6YPOV0/tFl3odI
fAC9cIjEF67g6sa6n2Toh0MkPvm2cV2FogktEr9AT0xem1cJ2CwS/0BfbJH4
qJcKh7JZJH6C3tgi8ZVSry4qYJH4C/pji8RniMMtEr9Bj2yReM+iC54WiQeh
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
7Y/3Ttnf/w84YMWt
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.010225}, {-0.356, 0.952}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"U / V\"", TraditionalForm], None}, {
        FormBox["\"t/s\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 750, Method -> {}, 
     PlotRange -> {{0, 0.010225}, {-0.356, 0.952}}, PlotRangeClipping -> True,
      PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Kanal 1\"", "\"Kanal 2 x 2\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.0036000000000000003`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.0036000000000000003`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.0036000000000000003`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.0036000000000000003`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.0001`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.0001`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "False"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.638165362099688*^9, 3.638165370038185*^9}, 
   3.638165401624112*^9, {3.638172408927051*^9, 3.638172440970037*^9}, {
   3.63817443250264*^9, 3.63817444463748*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ramp", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.009976", ",", "0.3267"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0006967", ",", 
       RowBox[{"-", "0.326"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SlopeRamp", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"Ramp", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], "-", 
     RowBox[{"Ramp", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}]}], 
    RowBox[{
     RowBox[{"Ramp", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", 
     RowBox[{"Ramp", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}]]}], 
  RowBox[{"(*", 
   RowBox[{"V", "/", "s"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"SlopeRamp2", "=", 
  RowBox[{"SlopeRamp", "*", "40", "*", 
   SuperscriptBox["10", 
    RowBox[{"-", "3"}]], 
   RowBox[{"(*", 
    RowBox[{"mA", "/", "ms"}], "*)"}]}]}]}], "Input",
 CellChangeTimes->{{3.63816538798016*^9, 3.638165490670673*^9}, {
   3.638165521838856*^9, 3.638165593820182*^9}, {3.638165817737203*^9, 
   3.638165823741704*^9}, {3.63816636105796*^9, 3.63816636590976*^9}, 
   3.638174466015161*^9}],

Cell[BoxData["70.3393574946386`"], "Output",
 CellChangeTimes->{
  3.638165511414245*^9, {3.638165584920994*^9, 3.638165594070059*^9}, 
   3.638165824529087*^9, 3.638166362511813*^9, 3.638166412643274*^9, 
   3.638167605217399*^9, 3.638167640791229*^9, 3.638174468168549*^9}],

Cell[BoxData["2.813574299785544`"], "Output",
 CellChangeTimes->{
  3.638165511414245*^9, {3.638165584920994*^9, 3.638165594070059*^9}, 
   3.638165824529087*^9, 3.638166362511813*^9, 3.638166412643274*^9, 
   3.638167605217399*^9, 3.638167640791229*^9, 3.638174468169896*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Maxpos", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.003016", ",", "0.06229"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.004138", ",", "0.2129"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.0052", ",", "0.3502"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.006231", ",", "0.5008"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.007277", ",", "0.6414"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.008323", ",", "0.6916"}], "}"}]}], "}"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "1000"}]}], "\[IndentingNewLine]", 
 RowBox[{"Maxpos", "=", 
  RowBox[{"%", "*", "SlopeRamp2"}]}], "\[IndentingNewLine]", 
 RowBox[{"nus", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"9.924", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", 
      RowBox[{
       RowBox[{"Length", "[", "Maxpos", "]"}], "-", "1"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"Maxpos", ",", "nus"}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"nlm", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"data", ",", 
     RowBox[{"a", " ", "+", " ", 
      RowBox[{"b", " ", "x"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"nlm", "[", "\"\<ParameterTable\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Normal", "[", "nlm", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "7", ",", "25"}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<I/mA\>\"", ",", "\"\<\[Vee] / GHz\>\""}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", "data", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"GHzmA", "=", 
  RowBox[{
   RowBox[{"nlm", "[", "\"\<ParameterTableEntries\>\"", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1"}], "]"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"GHz", "/", "mA"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.638165637900639*^9, 3.638165752488075*^9}, 
   3.638165796986453*^9, {3.638165834247647*^9, 3.638165837090404*^9}, {
   3.638165911627154*^9, 3.638166082936517*^9}, {3.63816627987553*^9, 
   3.638166280063483*^9}, {3.638166368163497*^9, 3.638166383751257*^9}, {
   3.638166419925561*^9, 3.638166442680062*^9}, {3.638166512683266*^9, 
   3.638166514561084*^9}, {3.63816690594989*^9, 3.638166908558501*^9}, {
   3.638167552648972*^9, 3.638167557701938*^9}, {3.638167693125681*^9, 
   3.638167693423603*^9}, {3.638172333797651*^9, 3.638172333928948*^9}, {
   3.638174548136339*^9, 3.638174606304574*^9}, {3.638174645443811*^9, 
   3.63817467369733*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.016`", ",", "4.138`", ",", "5.2`", ",", "6.231000000000001`", ",", 
   "7.276999999999999`", ",", "8.323`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.638165703094533*^9, {3.638165767735838*^9, 3.638165799678722*^9}, 
   3.638165841806904*^9, {3.638165883003835*^9, 3.638165921505967*^9}, {
   3.638165955699346*^9, 3.638165979871212*^9}, 3.638166016820789*^9, {
   3.638166067606599*^9, 3.638166084218728*^9}, 3.638166280836048*^9, {
   3.638166368685689*^9, 3.638166442982227*^9}, {3.638166505724995*^9, 
   3.638166514976386*^9}, 3.638166910672968*^9, 3.63816755988355*^9, 
   3.638167607533897*^9, 3.638167642591938*^9, 3.638167693958837*^9, 
   3.638172334885325*^9, {3.638174582817501*^9, 3.638174607469021*^9}, {
   3.638174648559468*^9, 3.638174673936318*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "8.4857400881532`", ",", "11.642570452512581`", ",", "14.630586358884829`", 
   ",", "17.531381461963726`", ",", "20.474380179539402`", ",", 
   "23.417378897115082`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.638165703094533*^9, {3.638165767735838*^9, 3.638165799678722*^9}, 
   3.638165841806904*^9, {3.638165883003835*^9, 3.638165921505967*^9}, {
   3.638165955699346*^9, 3.638165979871212*^9}, 3.638166016820789*^9, {
   3.638166067606599*^9, 3.638166084218728*^9}, 3.638166280836048*^9, {
   3.638166368685689*^9, 3.638166442982227*^9}, {3.638166505724995*^9, 
   3.638166514976386*^9}, 3.638166910672968*^9, 3.63816755988355*^9, 
   3.638167607533897*^9, 3.638167642591938*^9, 3.638167693958837*^9, 
   3.638172334885325*^9, {3.638174582817501*^9, 3.638174607469021*^9}, {
   3.638174648559468*^9, 3.63817467393959*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "9.924`", ",", "19.848`", ",", "29.772`", ",", "39.696`", ",", 
   "49.62`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.638165703094533*^9, {3.638165767735838*^9, 3.638165799678722*^9}, 
   3.638165841806904*^9, {3.638165883003835*^9, 3.638165921505967*^9}, {
   3.638165955699346*^9, 3.638165979871212*^9}, 3.638166016820789*^9, {
   3.638166067606599*^9, 3.638166084218728*^9}, 3.638166280836048*^9, {
   3.638166368685689*^9, 3.638166442982227*^9}, {3.638166505724995*^9, 
   3.638166514976386*^9}, 3.638166910672968*^9, 3.63816755988355*^9, 
   3.638167607533897*^9, 3.638167642591938*^9, 3.638167693958837*^9, 
   3.638172334885325*^9, {3.638174582817501*^9, 3.638174607469021*^9}, {
   3.638174648559468*^9, 3.638174673941017*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"a", 
      RowBox[{"-", "28.690652307361177`"}], "0.37587321748234637`", 
      RowBox[{"-", "76.33066409874945`"}], "1.7654617818092807`*^-7"},
     {"b", "3.3374621955843495`", "0.022352991785266858`", 
      "149.30718123307832`", "1.2069759005283802`*^-8"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.638165703094533*^9, {3.638165767735838*^9, 3.638165799678722*^9}, 
   3.638165841806904*^9, {3.638165883003835*^9, 3.638165921505967*^9}, {
   3.638165955699346*^9, 3.638165979871212*^9}, 3.638166016820789*^9, {
   3.638166067606599*^9, 3.638166084218728*^9}, 3.638166280836048*^9, {
   3.638166368685689*^9, 3.638166442982227*^9}, {3.638166505724995*^9, 
   3.638166514976386*^9}, 3.638166910672968*^9, 3.63816755988355*^9, 
   3.638167607533897*^9, 3.638167642591938*^9, 3.638167693958837*^9, 
   3.638172334885325*^9, {3.638174582817501*^9, 3.638174607469021*^9}, {
   3.638174648559468*^9, 3.638174673942859*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVjntQzAkAx1f0khrFJrW6tvdzbbXb/nrY/fbO/noYZ0jWEVsnvVR7Ecud
urq5plRKksc53G4PNZTRoMsv1TK3pMgqNS6F3oQoet3eH9/5zvc73/nOh7kn
eXOMBo1GC1Prfx+fkZnQaAxEVv/ADd1Ep6IrngbJNRkglAdDkzbQKdU22k/h
egwwxgr3FjrSKerm9s5zxgz0O7YUdS2jUyWSFbmeLgyIq+zeiW6tpnwmU2ZT
oxiQVE7KEi1XU/lDPi/f3GAgT55pUjBlRLFUTy4r49aBuiyb7SxbSXVE1qo0
P5rDpDLqSP60FlVzcslSJtsCbMN6o/Fn3+5maNzPlQ9agNaXlyD07L/7OUAc
GyNjwkK+NUkZMywQO/NhLbIE1t4uTLVbFGS+fZ9oyrTCxQXZ38weXdhXNepl
DFihf2XxGnLaEM1GCnl3qTUODG5XBlYbY3m4/HRylA0uzkdndbaaIYjVlq1t
aIuEq0Rvu78FdE0WBrVbbREqe/SJd8YS0i6DUkGOHWb8s07EMW0wwBUFHfK2
h31mY6z3MXUfd1w4vKjOYuPmZ/qOOCVvbqIoB+w7edQ0rcgZNrl813KJI5yj
912/NsJCjKB4uornhP4Rz5gdt9koO2Pd2DjhhP1pxwtZo644osjv0qx3Rl94
z1yMuzvezBnubJC44EBHw/CFdA78up8MxjmwEGQZ+cnuChcROfFN30+woKHQ
EdDHPBDRg9P8K+ux4HmkcjODwFi5yeQDJzbMt0iKi4I9kVMn5Rvks2FJHW3i
5HnhLGNRr2uIjf1zITr2d7yhcyAxiyt0RXmudfHPSzeACBlxU1a5YrQp53x3
IB8DqVnRr5a5QdpSpTieKsDrHF2v4lg3fMtLLgsWAbsmaoramt2w7eKoKH0K
uNC9i+ls5o42LYdXf/3uC27NfBRL6g770vfZvzn5IbDr1qrrKndU6K/xKrrn
h5rX0emPCQ7MaxUGYbH+KAi2j0wq4eCGx/OP7EV/cNbPpfi+40BkVF1KPxUA
V1oj91oEF1+MtXdc5QWiwqr80B9VXNQtbWXFPw7EQbY4xlHfA3vW6lr1pQVB
95537kiiBywzDZ+H0YNBl7myHB54QOPp4fKh6mBkpK2SLnPkQRWacMw9IgRb
i1dt3J3Nw8PaphT5UAimeczwyZc8PNnbZc04uhGTbabzZiDw0Dd1xu87IfbK
3JwelBN4q53SW3RTiA5O4vKd5wjMnFEe5t4Sgt8iH/lwnsAKZ1vTnjtCmPYz
Ksz+JOC2qTfSolm9X6ttkywncLgsUFWrFMInv9fc+IZ672DaqewXYrXkVyPx
IwIsYYtCU49EpsbdDzPtBNC3LrZSn8T7wq8d+R0ENicd0gxbSeKfmqSChqcE
0k+6BJTQSfwyFLlC7wUB6sXpZksLEuNRLlp1bwlsik9oFHBJRI38+CZomIB4
XrFjkEfi/sFLrb0jBCQFzNkcLxKXStZkaU4QKK9XebYLSES2L6Ft/0RgYBYN
IiEJhcjn34kpAlP5Z7fSwki4j6U3ZX4hoGXx5fPlCBIGOuPSq18JOAZUc8a2
kJCW2op8ZwnwVZpdJ7aRGLWO9lbNqXn27U5zi1L/1581jV9Q83y7baQSkWjz
VX1dXFTz5NHrMnaR+A/9mhkG
      "]]}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.019444444444444445`], AbsoluteThickness[1.6], 
      PointBox[{{8.4857400881532, 0.}, {11.642570452512581`, 9.924}, {
       14.630586358884829`, 19.848}, {17.531381461963726`, 29.772}, {
       20.474380179539402`, 39.696}, {23.417378897115082`, 
       49.62}}]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{10., 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[Vee] / GHz\"", TraditionalForm], None}, {
     FormBox["\"I/mA\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->500,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{7, 25}, {-5.32841571226421, 54.745901356241035`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.638165703094533*^9, {3.638165767735838*^9, 3.638165799678722*^9}, 
   3.638165841806904*^9, {3.638165883003835*^9, 3.638165921505967*^9}, {
   3.638165955699346*^9, 3.638165979871212*^9}, 3.638166016820789*^9, {
   3.638166067606599*^9, 3.638166084218728*^9}, 3.638166280836048*^9, {
   3.638166368685689*^9, 3.638166442982227*^9}, {3.638166505724995*^9, 
   3.638166514976386*^9}, 3.638166910672968*^9, 3.63816755988355*^9, 
   3.638167607533897*^9, 3.638167642591938*^9, 3.638167693958837*^9, 
   3.638172334885325*^9, {3.638174582817501*^9, 3.638174607469021*^9}, {
   3.638174648559468*^9, 3.638174674114211*^9}}],

Cell[BoxData["3.3374621955843495`"], "Output",
 CellChangeTimes->{
  3.638165703094533*^9, {3.638165767735838*^9, 3.638165799678722*^9}, 
   3.638165841806904*^9, {3.638165883003835*^9, 3.638165921505967*^9}, {
   3.638165955699346*^9, 3.638165979871212*^9}, 3.638166016820789*^9, {
   3.638166067606599*^9, 3.638166084218728*^9}, 3.638166280836048*^9, {
   3.638166368685689*^9, 3.638166442982227*^9}, {3.638166505724995*^9, 
   3.638166514976386*^9}, 3.638166910672968*^9, 3.63816755988355*^9, 
   3.638167607533897*^9, 3.638167642591938*^9, 3.638167693958837*^9, 
   3.638172334885325*^9, {3.638174582817501*^9, 3.638174607469021*^9}, {
   3.638174648559468*^9, 3.638174674115813*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"path", " ", "=", " ", "\"\<./04.16/up-hfs_zoom.tab\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ch1zoom", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ch2zoom", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Import", "[", "path", "]"}], ",", " ", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ch1", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "*", "ch1zoom"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ch2", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3"}], "]"}], "]"}], "*", "ch2zoom"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ch1", ",", " ", "ch2"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "750"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"PointSize", "[", "0.0001", "]"}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Kanal 1\>\"", "<>", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ch1zoom", " ", "\[NotEqual]", " ", "1"}], ",", " ", 
         RowBox[{"\"\< x \>\"", "<>", 
          RowBox[{"ToString", "[", "ch1zoom", "]"}]}], ",", " ", "\"\<\>\""}],
         "]"}]}], ",", " ", 
      RowBox[{"\"\<Kanal 2\>\"", "<>", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ch2zoom", " ", "\[NotEqual]", " ", "1"}], ",", " ", 
         RowBox[{"\"\< x \>\"", "<>", 
          RowBox[{"ToString", "[", "ch2zoom", "]"}]}], ",", " ", "\"\<\>\""}],
         "]"}]}]}], "}"}]}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t/s\>\"", ",", " ", "\"\<U / V\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.637565191222225*^9, 3.637565250415153*^9}, {
  3.637565281892177*^9, 3.637565424061915*^9}, {3.637565463206695*^9, 
  3.637565477378036*^9}, {3.637565934911824*^9, 3.637566000562091*^9}, {
  3.637566036145206*^9, 3.637566163068161*^9}, {3.637566193527112*^9, 
  3.637566209453878*^9}, {3.637566329351447*^9, 3.637566340752412*^9}, {
  3.638165310394884*^9, 3.638165355395884*^9}, {3.638166602144158*^9, 
  3.638166609324821*^9}, {3.638174806951812*^9, 3.638174838450491*^9}, {
  3.638174927896313*^9, 3.638174927982334*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         PointSize[0.0001]], 
        PointBox[CompressedData["
1:eJxd3XVUFevbxnFsDGxUsAMMFAMFk62CiooNJioGdit2YmMnNgYGJip4bAQV
GxW7O7Gx82VzwXzX7z3/nPVZ98yAm71nnucOKNp1YEu/1BYWFn8zWFiY/5/y
X88e5v+uR855G7H2W0yY6//6mGGvp9kHDy1z5v/FLxn+2OvJjIjvV//f8bcM
/9fZtV1Fn3v/7/yHhk3bzi++/uDx/7veU8Pr7X+OXZzjhevxL6V85kVfS77+
KyOebn1Jv5Zu8UZcX++tEe9d0LtJdv/3Rlxf/4MR7+EZZdvzykcjru/nk+F8
mW5mrf8mwbC+v8+Gz5x6l9ou3VfD+n6/GR4zNd23NIW+/7/v/4fhcm4F4h87
/zSsf88vw/ctnB5ENfv9//59fwzPP9rwytpefw3r3/vPcFHXsCeRtS1M//vv
xz9XHepYvkkqw3o9cNyvmBtr2qU2/e/rg7e1j2uRtUca0/++XnjKgXvnxg1J
a/rf1w93zPeq3tvx6Uz/+3qmNxWeGt9if6Frkc4jPkf6zMJ6fTMYznb9X7Xz
QVivt6VxvReVM4fXCLE04nr9Mxo+tiiP47YwrJ9HJuP85Z+KbrE9ksmI6+eT
2fCQFuWKBZ7B+nllMdw4rOqqH9ewfn5Whktkc8/T+zHWzzOr4d/9m82/+Q7r
55vN8LXz7TN5/ML6eWc3fMPaKfrOZKyfP3Y7WXVCrkw5DOv9kMM0JvfOBo9G
X40MG+Zas/F84np/EC9Qwv1HQJ6cRlzvl5xGfOaVhvsOrsJ6/+AvAc2GfiqW
y7DeT7hLJe8KZUKx3l849lH7t13K5zas9xuuvsB36/IIrPcf3ly7R8/LNawN
6/2Ic33oWyJjNNb7M4/hicGDH9X2wHq/4jdNR6wZGYv1/s1ruO3fsR3CvLDe
z/jkjoB8L29jvb/zGa7Ycca1wl2w3u94TZa5C9u8wHr/25hubBhUK9ONK5GZ
Di9qNq8/1ufBxjh+eN/lWU4lENfnw9bwE9vgM39HYX1ebI3zm50NmeZskd+w
Pj/5jeMPj9rqNmAa1ucJlyodZrEpSwHD+nzhJTcjjtxbiPV5w6lmHBptbVPQ
sD5/uL9LlEuTYKzPI779PObzFLtChvX5xPWXnt99eBvW5xXvrRc34HPFwob1
+cWFv9xwKLsf6/OM6yedXsSwPt/4d+jHuCZdsT7vRUxOSf9didwzadju3huJ
6/NPvFe7b/OmvsS6HxQ1XLji6AHrHLDuD/ia5R/PIwOw7hd41sMJDrd2Y90/
cJ39qTN9+Yx1Pylm2PzdZa+KdX/BO3tanio7But+g7ubZm30OIp1/8G2ebNO
6Z6quGHdj/Cld/O7TnTHuj/haTG56qyajnW/wrXWLC28/yzW/Qsn+Nv8vWJV
wrDuZzi0yaq775uXMM2PNj+Q4pLvb7izXeFDmRdj3e+w9Z91y0ve4Hq6/+Hz
V0uMdLO1M6z7oZ1xfsD2za07d8S6P+KqU8pUGbMW636J33XYkSvoCdb9095w
iFOFT3vsse6nuEPmvZdie2PdX3GOJ1V2vd6Odb/Fpw7un5P+A9b9t6ThcQtr
9CvmhHU/xk59jjZyHV7S9Cbx6TY1/nLy/Zn46zp1Src/gHW/xmttTmQY/hvr
/l3KcOuP9Z8vMJUyrq/7Oc5y5syJHQFY93d8fK3nhjMnuZ7u98RHjbw46Zll
acO6/+PyzVv6pvLEeh7gZyWvuRach/V8wCv/tSlYLQ7reYFb3rj9y8u6jGE9
P7Dlro63B7XFep7go9Me7p+9Euv5god16ha05T7W88bBcBnn5/4nijqYPB6N
TnwCXU5+/uBHVr29HnbHeh5xftCz+Eq/N2M9nzi+yZEBOfLFE9fzqqwRT7Pk
43snR6znFz7Qb1hss8FYzzM8yP3b9r7hWM83bF9g9Kzp37Ced+UM30343XtD
daznH154boJH5Dis5yH22JC65J1jWM9H/G+0+Q3taFjPSxzR0vJpzgaOphDz
42fDpeTnJ/G+ZWZFOwZiPU9x0dRZ1zW6wPl6vhK/cWv+hB7ZyxtxPW/LG/G5
u3N1CmiF9fzF7jOX1lyzlPP1PMY/fW3yH7yF9XzGbQvE/u6TtYJhPa+x04xs
b76Xx3p+46yfm9+Z1gLreY5fdV54NvdQrOc7PnnuyoH1i7Ge93iti3VohX1Y
z388ZkPrZUdvYK0HcOtsy6Z7/sBaH1Q0XHHMreG3bbHWCzjLC9sevWpirR/w
i5Y+3l87Yq0nKpqUpbgUGX10tfuUCcS1vsCryzxwyrkOa73B+SOXFim+Npq4
1h/EvVJ3zen4lLjWI8TLD9iQ6nC6Soa1PsGZbj/90LAk1noFP6tn//CGB9b6
BR/b3fOiXx+s9QxeWTD0aMIsrPUNHj7z9Y5JO7DWO7jFF4fV2S5WMpnvTi32
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
2i392rZqh5Vvw3M6WTW37YOVf8O6z2Dl43Cvs01NW2Zh5edw64nvnQeuck/O
dx1Nztdhd+f5js47sPJ3nF8xaYFLXPk84oXXXy54Ipa48ns4S9sh1rMeYOX7
8E+rXFYtP2Dl//CL43vT2qSqZ1j5QHxtlNfvBzmw8oM4uvyXhE3FsPKFOOzZ
kvj+Tlj5Q7x6pfOTyu5Y+UQ8q4V5Q4+VX8SjMoyMi/bDyjfiHkfynZ05HCv/
iL2GHohqPr1ecr7jcHI+krg5G5V3GXHlJ4mXf/Az7P4W4spX4gJLVm7ZeAAr
f4kzNa65tt9ZrHwm/mZxL8jpDlZ+Ez/bZ05gYuU78ZV+haZH/cbKf9Y3fKxY
5PgZVlj5ULzzZufhzQph5UfxyrkWA/KUx8qX4pnu6/zumbDyp3j4zzodQ5pj
5VNx97DHXn27YOVXcYsekz0rDcHKt2JT0oIDK/+Ky8WdqHFsEVY+FtvO8HOa
HlI/eX9+IDk/S9zSNb1D0wisfC3Hmz8d1jFY+Vv8JLSB7d3rWPlcfKnzyxwb
XmDld/FR65kZ+3zHyvc2MLztXOlUFTNi5X/x8klnv3+zwcoH42kufT8cLYOV
H8bD3mZ+ObUGVr4Yd92w/YGnJ1b+uEHyfuy/yGbtmtzI1ZG48sm4VrZ3sbf7
Y+WXcZmTc2PWjcfKN+N8Y8of7TUPK//M109X8VJE+bVY+Wic8HzQjq9hWPlp
/HBVjo1HorDy1Ti25Z5VU+Kw8tf4sGWrxY2fYOWzsXk1mfMzVn4bBw1bPPlW
Wg/DynfjpNuVNVb+Gw95eG1IT3usfDjuvHR4H0cXrPy4R/L6PDyyiWferl8a
EFe+HFdPvb/d4bZY+XNcan/bFpN7Y+XTcZ4BPzwajcbKr+M0JVbUzjELK9/O
9/fxVvWqN1di5d/x/Xl3ygdvx8rH4/P1xpbscQQrP48P/CpQuFwsVr4eb959
JM/n+1j5e7y4Z6esh95j5fNxQMF/6QIsGhpWfh8PvBL8xyMHVr4fd5xZ+0u2
Ylj5f9zY9OjN9UpY9QBc9cukp6vdsOoD2H5bsbvdvbDqBQ2T15e7I3N1OX7F
wQ+rfoBT5e1+7pM/56ueQPzd+bTHD0zDqi/guwEbD04Mwqo3cL0zVevvabAF
q/7A8f+9ex6a9QBWPQJvDJm+7toZrPoEXti+1PJVt7HqFXhi9jPzu8Vj1S9w
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
WP2NOH5ehcS3jHdKP6JJ/Y7EH7+2mHFoNHH1P+Kb9S6nKTwZqx8SX1y7bkLA
LKz+SK4f82vwr2eLiKtfEh9pbV7BYPVP4r27cyZsD8Hqp8Tm7F/2HVj9lXhd
z72vh0Zg9VviZdGTe9w4gtV/iecV9HpcPQarHxNPHVmi05pYrP5MPPbK51up
bmD1a+Khjie9/R54p/TzmtS/SbzPzCWXT78grn5O4r5P/ZqU/YDV38nxbUzO
Z+Z9J65+T+JNV6Svl2DR2rD6P3G9L9ePtc6I1Q+KayZ9gLH6Q3FS+4ktVr8o
Lp3eo/KkYlj9o7hIl3xhT8tg9ZPivIdfOng4YfWXYqu8BzZvq4HVb4rTDplZ
PJs7Vv8p/nW+XfAQT6x+VPypZJnERzBWfyp+GWDegGD1q+LEzVvO1X5Y/av4
elXzv7h1Sj++Sf2sxC8s6pup+3Cs/laOP/GuxrRT47ESHPhgwyypHaZj9b/i
3SF3x82dh9UPi7f82/7jYxBWfywObj/O33stVr8sXhJhTqBi9c/i2dkL9S+w
G6ufFk/u++7lhANY/bV4dMzR7k+iWqfMm5jUb4sHF533sP5ZrP5b3HNsZ5+t
cVj9uLjTjfI3re5g9efy9b0rWXgNfkJc/brEPedcung1nrj6d3Hdl2sbV/3M
8ernJV7NbfCplb+x+nvbGK6wpo7bv7RY/b645I8ckV2tsPp/cSHz7c8aqx8Y
5961Z1/pQlj9wThzpsmV5thj9Qvj1H6tdn5wxOofxj8iiyduabD6ifF7288b
/zNh9Re3SV6nnjCZu6Hye2D1G3P8vUuLV49vjtV/zPFXHfxsHrfF6kfG56ZV
WVKvC1Z/MteLepQuR2hv4upXxvtrXp+dZQhW/zLeFbTJctBorH5mvOnT8ClX
ArD6m/GqJg0sXGZh9TvjRVvyjl2xCKv/GQemefntz0qsfmg8qdP+oV1CsPqj
8cgDM96f2I7VL90mZd7TNCB3u76lIoirfxr7DSz9YtYRjlc/NfY5+6Pr+5Mc
r/5q4q3szt5vGYvVb40bTlzRft91rP5rrlf7Tp/rNg+Iqx+buItzjZbjXmD1
Z3O844LMsQ/fY/VrY7s3dxq6f8fq38b5G2w/udmirWH1c+Oc68fWyZwRq78b
ZzSXU3Jg9Xtji7YFq8XZYPV/46973oZXKYbVD47fWh2tsLwMVn84ftrLnCHH
6hdvmzJvbbpzvFMp3xrE1T9O/HKh8iHH3Yirn5z46VH/Cpf0JK7+cuKRVy+u
DPTC6jfH+8qvzfvOB6v/HO8IHLSohR9WPzre8Kx2toj+WP3p2Nx9nm84Vr86
XrDyUfqx47H61/GMr7sDHkzD6mfH41sE/K07D6u/vW3K7yMw+W9vOXpTEFa/
O8f3y1D8a8a1WP3vHN+ta8Lg/luIqx8etz9y/O2lMKz+eNw83+LelQ9wPfXL
4wZDuz8LisLqn8euSQ00WP30uErpdPc6xWH112OHKdfaRt/G6rfHxR5svGr3
BKv/HttUH958ZjxWPz7OvqT++TcJWP35OMOHPB7Nf2P167cz/KeReUfdLuX3
e5jUv0/c/HTLa4XVz8/x8ebtmzVx9ffjxx3autwvyPHq9yd+c1+pvXXssfr/
8cUcPxw3OnK+5gFwTL8zWy1dOF7zAcSPnFpu38+ENS+Aw4v1WX+xAdb8AN46
rnohp+ZY8wR43c1MK5a2xZovwMuczA3SWPMGeN7cbQs69saaP8BTX42xihqM
NY+Ax7p7ziwxGms+AQ8NLpBuRgDWvALu8/PNxPhArPmFdim/v8fUxfvI76aL
iGuegXibsDkj96wkrvkGbN4NWodgzTtwfr2kNwzW/AOuGfU3/m441jwErlTg
Ys/aR7DmI3DpEcFPNpzEmpfAReIGds4QizU/gfOWMz+BseYpcNYZ2dvE3sea
r8BpnzyMq/gCa94C/6q1u+mS91jzF/jTMvOCF2seA79KaFHfx6K9Yc1n4AdN
i0VHWmLNa+CkdpAcWPMb+IL57WKDNc+BT3ReVOV1Uaz5DnzwYLfdTcpgzXvg
3daVy+2u1D7l93mZNP+BzdnT3DU4XvMgxIPPmRN2WPMhHL/UfuPaO42Ja14E
z57kX8DkhTU/giffrbdsvQ/WPAke7ZInd3o/rPkSPHjh83m9+2PNm+Ceb/dl
vuCPNX+CO3lMn15hPNY8Cvbe0CbN4mlY8ynYM6ng2D7l9+2ZNK9C3K3d95/t
g7DmVzi+Wvjp4UeDseZZOL5CNvPECnHNt+CSfXoPmBqGNe+CC52s9vrlfqz5
F5y7SKYenlFY8zA48xhzBxbWfAxOfX1rx1xxWPMy+EcFc8MU1vwM/jCrsfft
x1jzNPj58/yXa8W3T85vxZo0X0P8Xp03nusSiGveBl9ddfh02t9Y8zcdjPPP
fZvt3ist1jxOB+P4qJYdj53LgjWfw/FJ6WdrrHkdjt9l+fe/hQWx5nfwpm6x
Tl/tsOZ58Oqja3a1c8Sa78GLbAY6HHHGmvfBgcNMm4uYsOZ/8KSL2YpPaYA1
D4RHlnm45kUzrPkgnPjms23cFmteCPs9nLh0py/W/FCHlN9Pa/Kp0SJnzt7E
NU+EWy0tOtd/MNZ8EW708WPGW6O4nuaNiNf2jJ5aMwBr/gi7bF6Yam0g52se
ibhj6m6Jb2nimk8ibtfRXLElrnklnH9/Gv+zG7Dml3DOXFc/lNuONc+EMw4I
6bcgHGu+CVucGfby82GseSf8tXi97m1PYs0/4bfjrR8euoA1D4XN3eWFr2PN
R+E7lffdCLiPNS+F4+ZNa/X8eYeU369s0vwU8dOvW19s+B5rnorjI+uVbLzj
G9Z8Fd5n/ms2Fj6GNW+Fd/w6VXeYpY9xfc1fEU9qZ82ONY+Fk5a7NljzWXhB
lmr71hTFmtfCM3pmrJS6DNb8Fp4QfWuHXyWseS7sX3Br6TPVsea7cL+RozeW
dcOa98LdrjQqOr8x1vwXbu+Yf3VCK6x5MJy4OcrXxscn5felmzQfRrzB00OL
D3bHmhfDrkkZXqz5MVxlhU/iEoHra54Ml/1S1vLZOKz5Mlys+Z/JHtOw5s2w
zbYL/7bNxZo/w9nTrxmTLQhrHg1n6DLg25BgrPk0/OeQ69Drm7Hm1fDnPNne
VwvDml/D8YMf9Fm9H2ueDT8+v+u5RRTWfBu+VXJi1+5nsObd8MWA5vdPXcaa
f/NJ+XsFpph7Rdo73CaueTh8pOrHa3MfY83HcX74oqgWn15jzcvhre8WXPBO
wJqf43rrGnZteOAXcc3T4WWJ/9oCaTsa1nwdnvcvdZ2JWbDm7fA0c/k8N9b8
HR4bsaFqg4JY83h4aPZh4VvtsObzcJ++7hWyOmLN6+EuMbm3D3bGmt/DbYqa
d4QdU/5+h0nzfLhp0jfI8Zrvw/VuTC28qhnWvB+uWal14paL62n+j7jTHPu8
3Xyx5gE5vvTLrwtjemHNB+IibqeylhmMNS+I864JCpwziutrfpB41h8903+c
RFzzhMTTelUN8ArEmi/Ev3aaF1hY84b4U+LqIP9KrPlD/Kp76JfxG7DmEfGD
yFGDH2/Dmk/E120bva0XjjWviC/42/YOPYw1v4hPXHr9NMvJjil/f8ekeUbi
hxwO+Q66gDXfyPG7p826e+Ua1rwj3vLInCDCmn/EwTXLXl3xHGseEi8N+t3s
7zu+vuYjic/+dP5cl29Y85J4cpPVDU7+w5qf7GR49Jb+x0tZYs1T4sHmcZzs
WPOVuJc5XZcPa94Sdzpw37lVUaz5S+ydVODCmsfEngPNHcGdUv5+lknzmdjt
bLOt46pzvOY1cTW7IvaP6mLNb+IKEz+sc2+MNc/J9RPfLAW3tMKa78SFnBcs
z+yDNe+JrRd0sR7YHWv+E2d+U3FBXD+seVCcOqlBB2s+FP9YFzdj+TiseVH8
4ff6tH+mYs2P4udthk70nYs1T4rv7XH7fXwp1nwpvmqVe2TJYKx5U3yu19OE
wM1Y86c4+nj4wHe7sOZRsdb5nZLrP1dNmk/Fu0aZG4yx5lXxpqt2T/KdwZpf
xavLf+009jLWPCteFBhz+8EtrPlWHPhsaWu3x1jzrnhS7Z5xm15jzb/ikStd
mmZKwJqHxQO/Zjjb/xfWfCz2a2HuIOpsWPOy2CdpQAprfha3Mrf/5caap8WN
zMuDAljztbj2EZsqne2w5m2xS77XYdHlsOZvO6f8vUqT49CDZe2diWsel7hd
bOCWma5Y87kcX6B0hxJv62PN63J8zikOa5s3w5rfxYmbmfzhbbDmebFF9fNB
eX2x5nvxt8Wrco3phTXvi9++7zfv/iCs+V/8tFGtzHVHYc0D4zsbraZvnIQ1
H4zjLO6nzhiINS+MT3fYOb7fQqz54c4pf1/VFLlv/M+LK4hrnpj4vhzNhjtt
wJov5vgd/Qp/WrqNuOaNccip9/1/7uV4zR/jFcWOvep4GGsemfMXjJvvF3UC
az4Zz7jp+6jEBc7XvDLxCU7miiPW/DL2n5vqVvw9rHlm3O/VZa9mz7Hmm3E3
9/WX9rzDmnfG7YOHeOb5hjX/jFv8rHt61D+seWhfXr+tGde/S4M1H40L3/zY
uYgl1rw0TlyMFGyZBWt+GudJ+vO0WPPUWH++FWu+Glsl/XlTX1Py33M2ad4a
689/crzmr4mnedU1cYeMNY+NJyQNGGHNZ+Ofbk7NdpbGmtfGwwfnt3pYDmt+
G39ck+ZcjkpY89y43/n4GW7OWPPd+OWPK/X9q2PNe+NuJQ+n3eyKNf+N73uZ
J66w5sFx+4DZEzM1wJoP902u/94wXdtlHqjEmhfHLe75JD5ysObH8flM9Q4G
t8KaJ8cNqpYbebkN1nw5Pu5n7ZzGB2veHLsu+pNQ2Rdr/hwfPPZsd4/uWPPo
uMq7CwOX9cKaT8dh+feVO9sPa14dl00aIMeaX8ebh08LLeePNc+Oi4cM6Nl5
FNZ8O15zubXdgnFY8+7Y5p/rk+hJWPPvvibz0yr3zhumJWVLrvs8lbjm4Yln
b5+ts30gcc3HE0/czBdoO5e45uWJZ4h4cHvmQuKanyce8PjUskNLsebp8d9s
5oo/1nw9Nq8eCgdjzdvjz30mxjXfgDV/jwct6zU/YDPWPD6OP9m8afg2rPl8
3DOhapbnu7Dm9fHjIkXP5g3Hmt/HHZtmnNFwP9Y8P7415mO9MYd9k+vvN5Pn
+4l7hd5Ks+MY/j8pp7uN
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         PointSize[0.0001]], 
        PointBox[CompressedData["
1:eJxd3Xdcje//B/AQCpERFaIolApRZrdUSlvnnIbKjmSP7JmdPbPLllmUj01G
CCFbiAappFSy/Trndb7X6/Hjn8/j+bhOqXPu+7rf13t8GA8d7xtaVUND409N
DQ3lf//356NZR62jzfKlVZ+SYitS4u3XfZotdRn4P1+x/9+6PEd34mTz2/b/
//UPxOtLwrKXJX17/M/rXwj/N8g+sGPw63++/1uxLh25u/FpZtY/3y9HeI/Z
j9kb638Qxvf/KFx9T5tQX8cCYfx9n4RHNVd46kZ8/ufvLxYe4ZFsOPJRiTB+
ni/C+rWe1+1bWPrPz1cmfPtmUVXT6l//+XkrhGctrl5RzejbPz//d2FLx2YF
WbY//vl9fgq/0bDJTPb+9c/v91t47aV+j2LD/vzz+/4VNraPz77cW0Pqlnhr
6qWY//3+9I8d50OsPasI4/2g03+mPNsVWFUY7w99ZEB6/7ojqgnj/aIXnX19
Z84kTWG8f3SI/kfnT3OrC+P9rCFsO63scvAKGu9vTeF6T/92uxtN4/3WEv7Q
uXZij3003n9t4SsbGlsdiafxedQS3vrF+JDhRRqfT23p3cxGx13e5UuT+lua
RN2uLdbxedURdo/vuuP7Exqfn45w63pOjUdl6Yjvh8+zrvCvsd5rnxfR+Hzr
CT+5O6CW608an7eu8DM9m6sZC2l8/rTjja7zGtaqL4zrgY6fYt/TfS2N64Nu
1trpe2TjBsK4Xujlj/qdPreDxvVDl0d6T/5i0lAY1xM9pJOig3kcjeuLTns3
4NMQ60bCuN7o7usGH96aROP6ow/2HjHyYQ89YVyPdMPi0a21r9K4PhsLz4+Z
+K63K43rtbG03GFw7gOTAqnQa9qu6Wlcx/XbRDjgz+ygeDmN65m+cSxSP+8l
jetbX7hjyLInLYbQuN71xd+/q87q9f4fuI7r30Cs17qwwXvNWBr3Az119NY6
N0tp3B+GwtmGMbf/zKBxv9DeqfuW2Go0Fcb9Q1+Ycdhx3BIa9xPdtl28xoE6
zYRxf9GbniddfL2+maR8mgwYXqC+37heZdn5mXoGzcU67r/mYn2sXbKdZwyN
+5F++T6lbJGpkTDuTyPx/fpuvptw4QiN+5U+5Zw+rqxjC2Hcv3SL8mcW7c/Q
uJ/pvqovbymM+5v+FVeS7jmUxv1On1wwJWHUfhr3Px0WWLFmcR6N/cCYP1/H
meN2W9DYH+gnWr89Lo6jsV/QK97Os3iRYCy9SKuQZe8vUO8ftMOZqrXKy/h6
7CcmwsqfTreriXg99hf6+Eitm+1n0dhv+PXDpRX7XS9xHfsPbdik7qLhVVoJ
Yz+iHxStHTrficb+RC9JaeiwY2kr8fdhv+J6r12bW5xJpbF/0aURBn8e6bQW
xn5Gx3nuePXZh8b+Rg8ybXG+9kYa+x2t93v31jbPaOx/9N3Hrac7GpoKYz+k
I48e9BsUQmN/pLsuMu8yK9ZUWrDJccWYDwXq/ZLrRUHHGkZncx37p5nwPpsO
X06a0dhPzcTXB9U+9SBtFNexv3K9fnaXE/lHuY79lus3z51ZVaOYxv7bRrx+
zvoeY0xs2oh17Mdctwm/5GY/lcb+TOc7OLQbcJbGfk3HGlyvOfUXjf27rbBf
Sd/36yQa+zld5/bt68ciaezv9LVYj723b9DY7+kZ0+8vyNVqJ4z9n7b28R1c
xYPG84DObfPEvvkaGs8Hevtf/+bd0ttJ7YLXXC1vW6h+XtC+z17+lOuZi9fj
+UFrnQh5OSHAXLwezxOuX1ry9szK7TSeL/SUgcOiD73h1+N5YyFsbvs+4rox
jecP/U5nlPztcBrPIzo6t6DTr4M0nk+058Vx9fULaDyv2gtX21Ty2caKxvOL
PjtmSpr3RBrPM3qCU8XR0Yk0nm+0WbOZK5ZW0HjeWQq/Kv01am93Gs8/ev2d
ea6X51hKD00yvs8NL1Q/D7nuurdqm4wrNJ6PfP3fmcoL2kqs43lpJdaTfLVy
GrjQeH7So81XXLWKovE8pY2r1t3tdo/G85V+9mLtvBG61sJ43tKrExoOjJTR
eP7STss399y12Vr8/Hgec/3HYIOm517QeD7TAc3SfoXX7cCfX/W8pm2W1Sv8
Zk3j+U3XLfPJWNKfxvOc/jhofWqjyTSe7/SNO4/O7tlI43lPx9rpxXU4TeP5
T8/a67fl0jMa8QDtV2/LUo/vNOKDjsIdZ72Y+tKQRrxA1/lgOCKsZ0dphurA
X6iOH7j+wTdY8TWERjxBX72002nRPBrxBb/fTvNMmwa7acQb9PTNLVvFXqUR
f/D7yasObWCVw3XEI7T1uL1VLlTvJIz4hK71Mqe4Xxsa8Qqd62z29pkrjfiF
vpIw8n5oOI14ht7ePO5S6Qoa8Q09dXn+sQXHaMQ7dP9yi5317tOIf+j2Q8au
3FlMIx6yEda6d3yWRQMa8RGd3bU4/KwNjXjJRjKOnxS27lOhdGlfxwEuCq4j
fuL6Vt3J/Z5MpRFP0VNmJ3YdtoVGfEV755W3KTlLI96izeV2TeZl0Ii/6OpX
ptfQ+U0jHuss/NbiXPk2IxrxGX0++mdO29404jU6ulqvx6eH0Ijf6Enj515z
WkgjnqM9My6fTN9HI76j27pU2TM4hUa8R1c71Wdd0Qca8V9n6fbUSzGG1p+k
N0aL5s/W7iKMeJA+G3VjfC0LGvFhF/H9Nn6tMWiLB9cRL3J9/FBXL7NxNOJH
vt4tbXmvxDU04knarPud9n0S+PWIL7lepfJw+CCdRrxJv6rvVXtgGY3401b4
vzlrfhTo0YhH6fUfH3ycYUcjPqXHKhq8qBlII16lXZNltzbNpBG/0q0sN/3X
ageNeJb+s+XpgYSLNOJb+qWm/mYpk0a8SydNCFx8T8NOGPEvvfbVtilBJjTi
YXq066thHx1pxMd20sRetZ7tnfBJ6pvYXDYtlOuIl7lu3HJQn+pLacTPfP2v
FbEdNxziOuJp+lnFu5bGqTTia/rksFa6JwpoxNv0qvvD//bU6SqM+Jse1eNA
UaoVjXicdjr44XWAD434nG7RsN299xNpxOv0j7nhF6ZsoBG/00/yjxypmkQj
nu8qGWj61bU8+UmK9/u0be1TriO+57oyejL6xnXE+92ER1hNmHHUoJt4PeJ/
rjtsSwjr3oPrOA/QzWqU+t8KpnE+4Nd/m9jZxW8u13FeoB+9jrDNiaFxfqCP
9/vPdFIyjfMEvTzpWyONbBrnC3q4cXfN1ZrdhXHeoKVVs0qbmtE4f9CG3y9k
xbnQOI/Q5cP/PLQbReN8Qj94ICXfiOouJafudj5d+kl9XuH60Z4L4mVHaZxf
6KWHrsa8u0fjPEMPbaS5Zvxnfn+cb3oI95rvPPe3Lo3zDq1fuGTsik40zj+0
8tM1kNM4D9Fp17Q9DkbQOB/RcdbuPbpE0zgv0Yu2rzS/dobG+YkeVDPNoP9L
GucpusfketqZP2mcr3oKN870+TamOY3zFl3itv7DD3sa56+eUpiqQFIk3T39
6OmywVzHeYw+aKKX0jiSr8f5jOuRq/2S9u3lOs5rdMiP6H2dbtA4v9FdR7zY
cOU9vx/Oc1xvmG640EurlzDOd3RRr+BJr9rROO/RqXE7h4S70zj/0fv1lG8g
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
iuvjkde93BqOnuJ6Qr2PvqI57vU9mae4/lD/o4+fq/tk43BPcf2iHugpru/t
E07cDYqgUR/0FPfDcjOf6yZLPMX9g3ohPe1V8fmPmz3F/Yb6oae4H4evX3cq
/iCNeqKnuH99VQ84T3F/o77oKe5/6U/6HvvbNOqNnmK/sEycvK36S0+xn6D+
6Cn2G8PwRuvv5tOoR3qK/UmrZdLyDT89xf6F+qSX2N/KnygWDKjjJfY/1Cvp
bOXH29xL7JeoX3qJ/fShQ/SEPEsvsd+inklfqrALO2HvJfZn1De9xP599Jjy
gO4l9nfUO+mtw2b49xrsxXymqv7pJZ4XSw0MvTUneonnCeqh9JT75/reWeAl
nj+oj3qJ59PQxUH269fTqJd6ieeZd49fXQL3evF5p6qf0r1Kdli2TPQSz0vU
U73E89T8YC/TD9dp1Fe92M8X8qbZ8Sde4vmMeitdQ1Vg8BLPc9Rf6dJbLer0
rPAS8QDqsV7sh5h7pVo1LW9h1Ge9Wb/rPOTnbX0a9VpvEZ9cyK9Surad9z/1
W28R38TF7sn3706jnust4qNoP8csI3ca9V1vEV8tqpPzIjeIRr2XnnR10cOj
Y7xFvIb6Lz14urJC4y3iP9SDaU+rlCvdV9OoD3uL+LJHzogzVWJo1Ivptttq
xt864S3iWdSP6cY+hw6uuUKjnuzN812NfjF+D2nUl+mSyt2leRaNejP9ZmLU
6pwvNOrP9PsNeteeVPERRj3aR71/Fkuvi3Ltu9WiUZ+mH6vGG2nUq2mMv/lI
+yYoL7hidf2aTv7rV3nkp1HPps8MaGN104JGfZs+kVQRZ97ZR7p3V/mnWF3v
pvfr3jJd3ZNG/ZveMXrL7hInGvVwH+mrcvsuL5Y2pIRVXjE06uN0lHG3rWcU
NOrl9ILK6KbZQBr1c3qa6oaiUU+nx3U6XCd7HI36Oh26auayvtNo1Nvp4Dw3
zcPzaNTffaQWytvNqETydWw6X2cZ11GP53q/XQU/J6zlOurzXO/9/fy0x1to
1OtpO/nKUrvdNOr3tOWJ4PHb42jU8+nWqgCCRn3fR3JVbeAlUtPQ3yOGnqNR
76cbXLmXdeMqjfo/rd1018B2d2j0A9B/I8a9XPmIRn8A/fWBvV9xBo1+AfqT
Rb10WQ6N/gE6Z0mm53+FNPoJfNT7c4n08t2J24blNPoL6Ic9lQcmGv0G/YVv
Rfskv6tOo/+AvvylZS/nujT6EejTniVnDjWm0Z9AHz2U3LlOCxr9CvTeauvj
x7eh0b9Abxs4tP0jaxr9DPS6s50O2Xal0d9AL22kzIDR6Hfor44fSqS5qgQR
19H/wPWI1L1Nh/Sn0Q9BjzGdEn09kEZ/BD1svlPDtkNp9EvQgRmN1qwIp9E/
QfvY5tb6PIlGPwXtsi5pie8sGv0VtH3h4qqnF9Lot6CV2SSDlTT6L2gLVUKc
Rj8GbfL7a8TbHTT6M2iDgJsljvtp9GvQuqeixx48RqN/g65RN+xjrdM0+jno
32FdQ8ddotHfQZdd03r3MIVGvwddYPQiuMt9Gv0f9LsZcc+3PKPRD0I/f6ws
ANLoD6HvW7s9GJRHo1+EToky9LhWTKN/hL6Ym3/T7DuNfhL6VO/zjlFVfIXR
X0If3r7i8idtGv0m9G5l+0cDGv0n9BZlesiQRj8Kvfror076rWj0p9CLayob
Hmj0q9CzhyqvGBr9K/Tki2MP9OlJo5/FV9yv4fr2JgecaPS30IMn192l7Umj
38VX7Kf+aW8Mxipo9L/QXu1ObHoQQqMfxlc8b5wXzavfeQSN/hhaeaqKHkej
X4bupNpQfcXzE/0zdLtNxYsGzqPRT0O3LL6icXUpjf4aXxGvNHZfN9t0ra+I
h9BvQ+scGPJt2RZfEY+h/4bWrNJpSmGsr4j/0I9D/wyqWuwdR6M/x1fEq19O
p48+lUCjX8dXxL/K6l3jc74ifkb/jq+IvzPHTB4286qviNfRz+Mr4v2nNx0z
X6f6ivMB+nt8xXninkmjIIdHvuy/VfX7+IrzyrU5OU/3ZfiyH17V/+Mrzj/n
nidWnih9OZ+i6gfyFeerBJvFaaMLff+ZF/MV57VDqxVu98t8xXkO/UK+4jwY
89E0pdNvX3F+RP+QjP//BqevDpury8R5FP1EMnFeXRmTcvG7jkycZ9FfJBPn
4YU/NncLaSwT52X0G8nE+XqmYmTSFSOZOH+j/0gmzu8T4u06tm4jE+d79CPJ
xPl/ZG2tY0utZSI/gP4kmcgnDBzxvG2BnUzkH9CvJBP5CkXyoX1evWUin4H+
JZnId3g0m9HypKtM5EfQzyQT+ZM+0/rt0OsvE/kW9DfJRD6mW7qB/oxAmcjf
oN9JJvI7HSzzN7waIhP5IvQ/0W2WnavXO1wm8kvoh5KJ/FTz7KgVeyfJRD4L
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
ztCY56dfzCpxnnWBxnw/LY97Ue3YFfr/AGpRxgA=
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.002045}, {-0.35000000000000003`, 1.38}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"U / V\"", TraditionalForm], None}, {
        FormBox["\"t/s\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 750, Method -> {}, 
     PlotRange -> {{0, 0.002045}, {-0.35000000000000003`, 1.38}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Kanal 1 x 5\"", "\"Kanal 2\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.0036000000000000003`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.0036000000000000003`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.0036000000000000003`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.0036000000000000003`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.0001`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.0001`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "False"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.638165318037208*^9, 3.638165341559181*^9}, {
   3.638166603621288*^9, 3.638166609870392*^9}, {3.638174808412148*^9, 
   3.63817483904804*^9}, 3.638174928598769*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MinPos", "=", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.0005699", ",", "0.801"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.000657", ",", "0.937"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.0008761", ",", "0.5953"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.001224", ",", "0.4777"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.001299", ",", "0.8084"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.001393", ",", "0.9296"}], "}"}]}], "}"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.638166594004991*^9, 3.638166596563466*^9}, {
   3.638166627251123*^9, 3.638166646137787*^9}, 3.638174894372614*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.0005699`", ",", "0.000657`", ",", "0.0008761`", ",", "0.001224`", ",", 
   "0.001299`", ",", "0.001393`"}], "}"}]], "Output",
 CellChangeTimes->{3.638166646336571*^9, 3.638174895379894*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ramp2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.001987", ",", "0.3561"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0001195", ",", 
       RowBox[{"-", "0.3102"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SlopeRamp3", "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"Ramp2", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], "-", 
      RowBox[{"Ramp2", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}]}], 
     RowBox[{
      RowBox[{"Ramp2", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", 
      RowBox[{"Ramp2", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}]}]], "/", "5"}]}], 
  RowBox[{"(*", 
   RowBox[{"V", "/", "s"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"SlopeRamp4", "=", 
  RowBox[{"SlopeRamp3", "*", "40", "*", 
   SuperscriptBox["10", 
    RowBox[{"-", "3"}]], 
   RowBox[{"(*", 
    RowBox[{"mA", "/", "ms"}], "*)"}]}]}]}], "Input",
 CellChangeTimes->{{3.638166680758658*^9, 3.638166738135709*^9}, 
   3.638174941607745*^9, {3.638174988909508*^9, 3.638174989382883*^9}}],

Cell[BoxData["71.3574297188755`"], "Output",
 CellChangeTimes->{{3.63816671972379*^9, 3.638166738193817*^9}, 
   3.638174944263226*^9, 3.638174990052585*^9}],

Cell[BoxData["2.85429718875502`"], "Output",
 CellChangeTimes->{{3.63816671972379*^9, 3.638166738193817*^9}, 
   3.638174944263226*^9, 3.638174990059824*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Measvals", "=", 
  RowBox[{"MinPos", "*", "SlopeRamp4", "*", "GHzmA", " ", "1000"}]}]], "Input",\

 CellChangeTimes->{{3.638166787559946*^9, 3.638166796722531*^9}, {
  3.638166915751468*^9, 3.638166917841028*^9}, {3.638167032721254*^9, 
  3.638167056596715*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5.428929497690319`", ",", "6.258653588318196`", ",", "8.34582406198717`", 
   ",", "11.65995737001746`", ",", "12.374415542199902`", ",", 
   "13.269869784668563`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.638166918912775*^9, {3.638167035589479*^9, 3.6381670570097*^9}, 
   3.638175040326693*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"spectrum", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "3.07"}], ",", 
    RowBox[{"-", "2.25"}], ",", 
    RowBox[{"Mean", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.48"}], ",", 
       RowBox[{"-", "1.12"}]}], "}"}], "]"}], ",", 
    RowBox[{"Mean", "[", 
     RowBox[{"{", 
      RowBox[{"1.56", ",", "1.92"}], "}"}], "]"}], ",", "3.76", ",", "4.58"}],
    "}"}]}]], "Input",
 CellChangeTimes->{{3.638166937946718*^9, 3.638166938426744*^9}, {
  3.63816697653225*^9, 3.638167009084961*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "3.07`"}], ",", 
   RowBox[{"-", "2.25`"}], ",", 
   RowBox[{"-", "1.3`"}], ",", "1.74`", ",", "3.76`", ",", "4.58`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.638167009275284*^9, 3.638175043935168*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"Measvals", ",", "spectrum"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"nlm", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"data", ",", 
    RowBox[{"a", "+", 
     FractionBox["x", "b"]}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"nlm", "[", "\"\<ParameterTable\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "data", "]"}]}], "Input",
 CellChangeTimes->{{3.638167058540526*^9, 3.638167076120199*^9}, {
  3.638167107455469*^9, 3.638167241589252*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "8.531571420007111`"}], "+", 
       RowBox[{"0.9531159485811554`", " ", "x"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`a -> -8.531571420007111, $CellContext`b -> 
      1.0491902915785198`}, {{$CellContext`x}, $CellContext`a + \
$CellContext`b^(-1) $CellContext`x}}, {1}, {{5.428929497690319, -3.07}, {
    6.258653588318196, -2.25}, {8.34582406198717, -1.3}, {11.65995737001746, 
    1.74}, {12.374415542199902`, 3.76}, {13.269869784668563`, 4.58}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`a, $CellContext`b, \
$CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.638167076521251*^9, {3.638167124002324*^9, 3.638167241998697*^9}, 
   3.638175045938675*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"a", 
      RowBox[{"-", "8.531571420007111`"}], "0.9216927145181903`", 
      RowBox[{"-", "9.256416249820248`"}], "0.00075739398901123`"},
     {"b", "1.0491902915785198`", "0.101168087470534`", "10.370763328743411`",
       "0.00048804171346678276`"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.638167076521251*^9, {3.638167124002324*^9, 3.638167241998697*^9}, 
   3.638175045941384*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     PointBox[{{5.428929497690319, -3.07}, {6.258653588318196, -2.25}, {
      8.34582406198717, -1.3}, {11.65995737001746, 1.74}, {
      12.374415542199902`, 3.76}, {13.269869784668563`, 4.58}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5.306414805706284, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{5.428929497690319, 13.269869784668563`}, {-3.07, 4.58}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.638167076521251*^9, {3.638167124002324*^9, 3.638167241998697*^9}, 
   3.63817504598971*^9}]
}, Open  ]]
},
WindowSize->{1276, 714},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Linux x86 (32-bit) (September 9, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 3174, 82, 231, "Input"],
Cell[3757, 106, 42239, 750, 488, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46033, 861, 1270, 39, 109, "Input"],
Cell[47306, 902, 275, 4, 32, "Output"],
Cell[47584, 908, 276, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47897, 917, 2974, 75, 231, "Input"],
Cell[50874, 994, 814, 14, 32, "Output"],
Cell[51691, 1010, 870, 15, 32, "Output"],
Cell[52564, 1027, 792, 14, 32, "Output"],
Cell[53359, 1043, 1527, 30, 65, "Output"],
Cell[54889, 1075, 3647, 71, 337, "Output"],
Cell[58539, 1148, 688, 10, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59264, 1163, 3173, 82, 231, "Input"],
Cell[62440, 1247, 43101, 763, 492, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105578, 2015, 774, 20, 77, "Input"],
Cell[106355, 2037, 234, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106626, 2047, 1220, 38, 109, "Input"],
Cell[107849, 2087, 157, 2, 32, "Output"],
Cell[108009, 2091, 157, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108203, 2098, 286, 6, 32, "Input"],
Cell[108492, 2106, 342, 8, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108871, 2119, 543, 16, 32, "Input"],
Cell[109417, 2137, 260, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109714, 2149, 682, 18, 122, "Input"],
Cell[110399, 2169, 1002, 27, 43, "Output"],
Cell[111404, 2198, 994, 23, 59, "Output"],
Cell[112401, 2223, 1146, 29, 229, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
